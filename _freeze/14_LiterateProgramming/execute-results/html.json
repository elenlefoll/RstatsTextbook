{
  "hash": "8a75e6f87c089ce309c2b93c1966cf52",
  "result": {
    "engine": "knitr",
    "markdown": "---\nbibliography: \n  - references.bib\n  - grateful-refs.bib\n#format:\n#  pdf:\n #   toc: true\n  #  colorlinks: true\n   # prefer-html: true\n---\n\n# Rep`R`oducible research and academic w`R`iting in Quarto {#sec-LiteRateProgramming}\n\n### Chapter overview {.unnumbered}\n\nSo far, we have seen how we can export the outputs of our analyses conducted in `R`, both in the form of tables (@sec-ExportingRObjects) and graphics (@sec-ExploringPlots). However, in most situations, we want to communicate our research in the form of a document that combines both text and analysis outputs. This is where **literate programming** comes into play!\n\nIn this chapter, you will learn about:\n\n-   the concept of literate programming\n-   why reproducibility matters\n-   how to make your research more reproducible\n-   how to use Quarto to write research reports, theses, and papers\n-   how to export and share your research in different formats including HTML, PDF, LibreOffice Writer, and Microsoft Word.\n\n\n\n## Literate programming {#sec-LitProgramming}\n\nThe basic idea of literate programming is that we combine text, code, and code outputs (i.e. tables, statistics, and plots) within a single document that can be exported into different formats for sharing and publishing.\n\nLiterate programming can be implemented in different authoring formats. Up until very recently, the most common format for `R` projects was **R Markdown**. For `Python` projects, **Jupyter Notebooks** remains the standard to date. In this chapter, we will focus on **Quarto**, a relatively new [open-source](https://en.wikipedia.org/wiki/Free_and_open-source \"Free and open-source\") scientific and technical authoring and publishing system that has the advantage of supporting many different programming languages. This means that code in `R`, `Python`, `Julia`, and other languages can be combined into one document, making project management and collaboration much easier. Quarto allows us to easily export (or **render**) our documents to HTML, PDF, Word, and many more formats (see @fig-QuartoFormats and @sec-PublishingFormats).\n\n![A schematic representation showing Quarto can understand multi-language input and produce multi-format outputs (Artwork by [Allison Horst](https://allisonhorst.com/cetinkaya-rundel-lowndes-quarto-keynote) from the [\"Hello, Quarto\" keynote](https://mine.quarto.pub/hello-quarto/#/hello-quarto-title) by Julia Lowndes and Mine √áetinkaya-Rundel, first presented at the RStudio Conference 2022).](images/AHorst_Quarto.png){#fig-QuartoFormats fig-alt=\"A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto.\"}\n\nLiterate programming is particularly useful for **academic research** and **data science**. Did you know that this entire textbook was written in Quarto? I chose this format because it allows for the seamless combination of explanations with nicely formatted `R` code and code outputs (i.e., all of the textbook's tables, data visualisations, quiz questions, etc.). It also automatically generates consistent section and figure numbers, cross-references, bibliographic references, and much more. By the end of this chapter, you'll be ready to start writing your own term paper, dissertation, thesis, journal article, blog, or presentation slides in Quarto.\n\n## Reproducible research {#sec-Reproducibility}\n\nNot only is using Quarto (or any other literate programming format, see @sec-LitProgramming) very convenient, it also helps us make our research more reproducible. Unfortunately, the terms **reproducible**, **replicable** and **repeatable** are often confused and, not helping matters, some definitions in the literature contradict each other. In this textbook, we will adopt the terminology of [The Turing Way](https://book.the-turing-way.org/). We thus define **reproducibility** as the ability of an independent researcher or team to obtain the same results as in a study using the same data and methods as the original study (see @fig-reproducibility-terminology).\n\n::: column-margin\n![](images/hex_TuringWay.jpg){width=\"100\" alt-text=\"The Turing Way hexagonal logo features a large arrow forward representing the research process.\"}\n:::\n\nThis is in contrast to **replicability**, where the same methods, but different data are used; and **robustness**, where the same data, but different methods are used. Finally, if a finding can be reliably observed across different datasets with different methods, then we can say that the finding is **generalisable**.\n\n![Defining *reproducibility* and related terms (CC-BY 4.0 [The Turing Way Community](https://book.the-turing-way.org/reproducible-research/overview/overview-definitions))](images/TuringWay_reproducible-matrix.jpg){#fig-reproducibility-terminology width=\"444\"}\n\nGiven this definition, reproducibility might seem like a low bar to pass. You might be thinking: shouldn't it be obvious that we'll get the same results if we repeat a study using exactly the same data and method? Well, yes, it should be. But it very often isn't! For a start, to be able to even attempt to reproduce the results of a study, the underlying data must be available. Linguists that share their primary data as Ewa DƒÖbrowska did as part of her 2019 paper [@DabrowskaExperienceAptitudeIndividual2019] remain the exception rather than the norm [see @bochynskaReproducibleResearchPractices2023a][^14_literateprogramming-1]. Second, the data must be available in an accessible format and must be published together with enough documentation to be understandable to an independent researcher. Third, the author(s) of the original study need to have very diligently documented all their data wrangling and analyses steps. The best way to do this is undoubtedly to use code that does not require closed-source software (e.g., a researcher without a license for SPSS or Stata will not be able to run SPSS or Stata scripts, see @sec-OpenSource). This open code must be shared in an accessible format, too. Fourth, independent researchers need to be able to run these scripts. To this end, it is important that they know exactly which tools were used. Thus, if the analyses were conducted in `R`, they need to know which `R` version and which packages and package versions were used (@sec-Packages). They also need to know in which order the scripts were run and, finally, the scripts must run on their own computers without any errors. So now, reproducibility doesn't sound quite so easy, right? Luckily, if we apply the principles of literate programming in **Quarto**, we can go a long way towards ensuring that our research is reproducible.\n\n[^14_literateprogramming-1]: Although there is ground for optimism here because more and more linguists and language education scholars are beginning to make their data open in repositories such as the [Open Science Framework (OSF)](https://osf.io/), [IRIS](https://www.iris-database.org/), and [TROLLing](https://dataverse.no/dataverse/trolling) (see @sec-Sharing).\n\n::: callout-note\n### Going furtherÔ∏è üöÄ {.unnumbered collapse=\"TRUE\"}\n\nTo find out more about best practices for reproducible research, check out [The Turing Way](https://book.the-turing-way.org/)'s excellent [Guide for Reproducible Research](https://book.the-turing-way.org/reproducible-research/reproducible-research).\n:::\n\n::: {.callout-tip collapse=\"false\"}\n#### Your turn! {.unnumbered}\n\nWatch this video from 2019, in which Garrett Grolemund (data scientist and instructor at RStudio) explains why **literate programming** is key to improving medical science, data science, and ultimately all empirical research endeavours. Be aware that everything that Garrett says about **R Markdown** is also true of **Quarto**. <!--# @Vishar, if you could find a way to center-align this video, this would make me very happy. -->\n\n{{< video \"https://www.youtube.com/watch?v=s9aWmU0atlQ\" width=\"500\" height=\"300\" title=\"Garrett Grolemund | R Markdown The bigger picture (2019)\" >}}\n\n[**Q14.1**]{style=\"color:green;\"} What is meant by the replication crisis?[^14_literateprogramming-2]\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_8264\" onsubmit=\"return validate_form_8264()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_8264\" id=\"answer_8264_1\" value=\"An approach that integrates external criticism by colleagues and peers into the research process.\"/>\nAn approach that integrates external criticism by colleagues and peers into the research process.\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_8264\" id=\"answer_8264_2\" value=\"The tendency to report only significant results in the abstract, while reporting non-significant results within the main body of the manuscript (not reporting non-significant results altogether would constitute selective reporting).\"/>\nThe tendency to report only significant results in the abstract, while reporting non-significant results within the main body of the manuscript (not reporting non-significant results altogether would constitute selective reporting).\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_8264\" id=\"answer_8264_3\" value=\"The application of statistical principles to arrive at well-founded ‚Äîi.e., likely corresponding accurately to the real world‚Äî concepts, conclusions or measurement.\"/>\nThe application of statistical principles to arrive at well-founded ‚Äîi.e., likely corresponding accurately to the real world‚Äî concepts, conclusions or measurement.\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_8264\" id=\"answer_8264_4\" value=\"An aphorism describing the pressure researchers feel to publish academic manuscripts, often in high prestige academic journals, in order to have a successful academic career.\"/>\nAn aphorism describing the pressure researchers feel to publish academic manuscripts, often in high prestige academic journals, in order to have a successful academic career.\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_8264\" id=\"answer_8264_5\" value=\"A set of good research practices based on fundamental principles: honesty, reliability, respect and accountability.\"/>\nA set of good research practices based on fundamental principles: honesty, reliability, respect and accountability.\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_8264\" id=\"answer_8264_6\" value=\"The finding, and related shift in academic culture and thinking, that a large proportion of scientific studies published across different disciplines do not replicate.\"/>\nThe finding, and related shift in academic culture and thinking, that a large proportion of scientific studies published across different disciplines do not replicate.\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_8264\"></div>\n</form>\n<script>function validate_form_8264() {var x, text; var x = document.forms['form_8264']['answer_8264'].value;if (x == 'The finding, and related shift in academic culture and thinking, that a large proportion of scientific studies published across different disciplines do not replicate.'){text = 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: <a href=\"https://forrt.org/glossary/english/\">https://forrt.org/glossary/english/</a>.';} else {text = 'No, that‚Äôs not it.';} document.getElementById('result_8264').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.';text = res1;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"hint_32167\" onclick=\"return show_hint_32167()\">üê≠ Click on the mouse for a hint.</div>\n<div id=\"result_32167\" onclick=\"return show_hint_32167()\"></div>\n<script>function show_hint_32167(){var x = document.getElementById('result_32167').innerHTML; if(!x){document.getElementById('result_32167').innerHTML = 'The community-sourced FORRT glossary provides excellent, short definitions for many Open Science terms: <a href=\"https://forrt.org/glossary/english/\">https://forrt.org/glossary/english/</a>.';} else {document.getElementById('result_32167').innerHTML = '';}}</script>\n```\n\n:::\n:::\n\n\n[**Q14.2**]{style=\"color:green;\"} Which stages of the research process are potential sources of uncertainty?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_87649\" onsubmit=\"return validate_form_87649()\" method=\"post\">\n<label>\n<input type=\"checkbox\" id=\"answer_87649_1\" value=\"The choice of research questions\"/>\nThe choice of research questions\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_87649_2\" value=\"The sampling procedure\"/>\nThe sampling procedure\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_87649_3\" value=\"The measurement of variables\"/>\nThe measurement of variables\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_87649_4\" value=\"The handling of missing data\"/>\nThe handling of missing data\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_87649_5\" value=\"The choice of statistical tests/models\"/>\nThe choice of statistical tests/models\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_87649_6\" value=\"The handling of confounding variables\"/>\nThe handling of confounding variables\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_87649_7\" value=\"The publication process\"/>\nThe publication process\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_87649\"></div>\n</form>\n<script>function validate_form_87649() {var text; var x1 = document.getElementById('answer_87649_1'); var x2 = document.getElementById('answer_87649_2'); var x3 = document.getElementById('answer_87649_3'); var x4 = document.getElementById('answer_87649_4'); var x5 = document.getElementById('answer_87649_5'); var x6 = document.getElementById('answer_87649_6'); var x7 = document.getElementById('answer_87649_7'); if (x1.checked == true&x2.checked == true&x3.checked == true&x4.checked == true&x5.checked == true&x6.checked == true&x7.checked == true){text = 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.';} else {text = 'Not quite. There are more potential sources of uncertainty';} document.getElementById('result_87649').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.';text = res1 + res2;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n:::\n\n\n[**Q14.3**]{style=\"color:green;\"} What would it take for a linguist to fully understand the conclusions of another linguist's quantitative study?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_37892\" onsubmit=\"return validate_form_37892()\" method=\"post\">\n<label>\n<input type=\"checkbox\" id=\"answer_37892_1\" value=\"The raw data from the study\"/>\nThe raw data from the study\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_37892_2\" value=\"The analysis code\"/>\nThe analysis code\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_37892_3\" value=\"The software used to run the code\"/>\nThe software used to run the code\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_37892_4\" value=\"Remote access to the author&#39;s computer\"/>\nRemote access to the author's computer\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_37892_5\" value=\"The author&#39;s reasoning\"/>\nThe author's reasoning\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_37892\"></div>\n</form>\n<script>function validate_form_37892() {var text; var x1 = document.getElementById('answer_37892_1'); var x2 = document.getElementById('answer_37892_2'); var x3 = document.getElementById('answer_37892_3'); var x4 = document.getElementById('answer_37892_4'); var x5 = document.getElementById('answer_37892_5'); if (x1.checked == true&x2.checked == true&x3.checked == true&x4.checked == false&x5.checked == true){text = 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!';} else {text = 'No, not quite.';} document.getElementById('result_37892').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!';text = res1 + res2 + res3;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"hint_22118\" onclick=\"return show_hint_22118()\">üê≠ Click on the mouse for a hint.</div>\n<div id=\"result_22118\" onclick=\"return show_hint_22118()\"></div>\n<script>function show_hint_22118(){var x = document.getElementById('result_22118').innerHTML; if(!x){document.getElementById('result_22118').innerHTML = 'If you‚Äôre unsure, re-watch the video from minute 13‚Äô onwards.';} else {document.getElementById('result_22118').innerHTML = '';}}</script>\n```\n\n:::\n:::\n\n:::\n\n[^14_literateprogramming-2]: The above definitions are all from the community-sourced FORRT glossary [@parsonsCommunitysourcedGlossaryOpen2022].\n\n## Getting started with Quarto {#sec-StartQuarto}\n\nQuarto documents are designed to:\n\n1.  Help you **collaborate** with other researchers (including your future self!) who are interested in both reproducing your results and understanding how you reached them (i.e. the code).\n\n2.  Provide you with a convenient **environment** in which to do research - a kind of \"modern-day lab notebook where you can capture not only what you did, but also what you were thinking\" [@wickhamDataScienceImport2023].\n\n3.  **Communicate** your analyses to others, including those who are not familiar with any programming language.\n\n### Installation\n\n::: column-margin\n![](images/hex_Quarto.png){width=\"100\" alt-text=\"The Quarto logo is a circle divided into four quarters.\"}\n:::\n\nWe will be writing Quarto documents from the *RStudio* IDE[^14_literateprogramming-3]; however, Quarto itself requires a separate installation. Follow these steps to **install** Quarto and check that everything is working as expected:\n\n[^14_literateprogramming-3]: You can, of course, write Quarto documents using any other IDE (Integrated Developer Environment, see @sec-IDE) that supports Quarto such as VS Code, Jupyter, or Neovim.\n\n1.  Go to <https://quarto.org/docs/get-started/> and download the latest Quarto version that is compatible for your operating system.\n\n2.  Once the download is completed (which may take several minutes), double-click on the installer file that you downloaded and click your way through the installation process.\n\n3.  In *RStudio*, create a new Project by selecting *File¬†\\>¬†New Project...* in the main menu, or by clicking on the \"new project\" button (see @sec-RProject). You can choose to first option to create a new project directory if you've not yet got one or the second option to select an existing project directory.\n\n4.  Then, create a new Quarto document by navigating to *File¬†\\>¬†New File¬†\\>¬†Quarto Document...*, or clicking on the \"new document\" button and selecting \"*Quarto Document...\"*. A dialogue menu will appear (@fig-QuartoNew). Leave everything as is and simply click on \"Create\" at the bottom.\n\n![](images/Quarto_new.png){#fig-QuartoNew width=\"401\"}\n\n4.  *RStudio* has now opened a new, untitled Quarto file (`.qmd`). Change the title of the document (which is not the same as its filename!) and add the following three lines in the **document header** by copying and pasting the following lines at the top of the document.[^14_literateprogramming-4] Quarto document headers are written in **YAML** which, I kid you not, stands for *Yet Another Markup Language*! üòÖ\n\n[^14_literateprogramming-4]: Note that, in YAML syntax, character strings such as the document title and your name must be enclosed in quotation marks. By contrast, the date is not enclosed in quotation marks because it is a dynamic variable that will be adjusted to your computer's system date so that, every time you render the document, the date will be updated.\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: \"Learning Quarto\"\nsubtitle: \"by reproducing the descriptive statistics of DƒÖbrowska's (2019) study\"\nauthor: \"Write your name here\"\ndate: last-modified\n---\n```\n:::\n\n\n5.  To check your Quarto installation, render your document by either selecting *File¬†\\>¬†Render Document* in the main menu, or clicking on \"Render\" button in the Quarto menu bar (see @fig-QuartoRender). You will first be prompted to give your `.qmd` file a name (e.g., `LearningQuarto.qmd`) and save it. Once you have saved it, your `.qmd` file will automatically be rendered to HTML (Quarto's default rendering format).\n\n6.  Navigate to the folder where you saved your `.qmd` file to find the rendered HTML file. It will have the same filename as your Quarto document but with the file extension `.html` (e.g., `LearningQuarto.html`). If you double-click on the file, it will open up in your default web browser (e.g., Firefox, Google Chrome, Safari). You should see that the HTML document features the title of your document, your name as the author, and today's date (see @fig-QuartoHTML).\n\n::: {layout-ncol=\"2\"}\n![The `.qmd` file as opened in RStudio](images/LearningQuarto_qmd.png){#fig-QuartoRender}\n\n![The `.html` file as opened in a web browser](images/LearningQuarto_html.png){#fig-QuartoHTML}\n:::\n\nFor now, the document is empty. In the next sections, you will learn how to add text, code, and code outputs to your Quarto document.\n\n### *RStudio*'s visual editor\n\nYou may have noticed that *RStudio* proposes two different modes in which Quarto documents can be edited: **Source** and **Visual** (see @fig-QuartoModes).\n\n![Source and Visual mode in RStudio](images/Quarto_Source-Visual.png){#fig-QuartoModes}\n\nThe Visual mode offers a [WYSIWYM](https://en.wikipedia.org/wiki/WYSIWYM) authoring experience. This means that you can use the Quarto editing toolbar (see @fig-QuartoModes) for formatting and that you'll immediately see the effect of your formatting on screen. For example, to format a word in italics, you can click on the corresponding button in the toolbar or use the keyboard shortcut (‚åò/Ctrl + I) - just like you would in text-processing software. In the background, however, *RStudio* automatically converts your formatted text to **Markdown** in the underlying source code of your `.qmd` file. Markdown is a **plain-text format**. In Markdown, words in italics are enclosed in asterisks like this: `*italics*`.\n\nYou can toggle back and forth between these two modes by clicking on **Source** and **Visual** in the editor toolbar (or using the keyboard shortcut ‚åò/Ctrl ‚áß F4).\n\n::: {.callout-tip collapse=\"false\"}\n#### Your turn! {.unnumbered}\n\n[**Q14.4**]{style=\"color:green;\"} In this task, you will learn to use *RStudio*'s Visual model to format text in a Quarto document.\n\n-   In a new line beginning after the final `---` of the YAML header, paste the introduction text below.\n-   Using the Quarto editing toolbar, format the text so that, in the Visual mode, it looks like the text displayed in @fig-QuartoIntro.\n-   Render the document and compare how it is formatted in the HTML version.\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nIntroduction\n\nThe aim of this report is to reproduce the descriptive statistics reported in DƒÖbrowska (2019: 5-6) using the original datasets (DƒÖbrowska 2019: Appendix S4):\n\nMethod\n\nParticipants\n\nNinety native speakers (42 male and 48 female) and 67 nonnative speakers of English (21 male and 46 female) were recruited through personal contacts, church and social clubs, and advertisements in local newspapers. Participants were told that the purpose of the study was to examine individual differences in native and nonnative speakers‚Äô knowledge of English and whether these differences are related to their linguistic experience and abilities. All participants signed a written consent form before the research commenced.\n\nThe L1 participants were all born and raised in the United Kingdom and were selected to ensure a range of ages, occupations, and educational backgrounds. The age range was from 17 to 65 years (M = 38, SD = 16). Twenty-two percent of the participants held manual jobs, 24% held clerical positions, and 28% had professional-level jobs or were studying for a degree; the remaining 26% were occupationally inactive (i.e., unemployed, retired, or homemakers). In terms of education, participants‚Äô backgrounds ranged from no formal qualifications to Ph.D., with corresponding differences in the number of years spent in full-time education (from 10 to 21; M = 14, SD = 2). Six participants reported a working knowledge of another language; the rest described themselves as monolinguals.\n```\n:::\n\n\n![*RStudio*'s Visual mode](images/LearningQuarto_intro.png){#fig-QuartoIntro}\n:::\n\n::: {.callout-note collapse=\"true\"}\n#### Click here for the solution to [**Q14.4**]{style=\"color:green;\"}\n\nIn the Visual mode (see @fig-QuartoVisual (a)), you will need to click on the \"Normal\" drop-down menu (see @fig-QuartoVisual (b)) to change the formatting of the word *Introduction* to the \"Header 1\" style.\n\nTo format the long citation, choose the \"Blockquote\" option from the the \"Format\" drop-down menu (see @fig-QuartoVisual (c)).\n\n![](images/Quarto_visual.png){#fig-QuartoVisual width=\"442\"}\n:::\n\n## Markdown text {#sec-Markdown}\n\nAs you discovered in [**Q14.4**]{style=\"color:green;\"}, writing and formatting text in RStudio's Visual editor is very similar to writing in a word-processing software such as LibreOffice Writer or Microsoft Word. In the background, however, RStudio converts all formatting to **Markdown**.\n\nTo make writing in Quarto more convenient and less error-prone, you can switch on a **spell-checker** within RStudio. To do so, go to *Tools¬†\\>¬†Global Options...¬†\\>¬†Spelling*.\n\n::: {.callout-tip collapse=\"false\"}\n#### Your turn! {.unnumbered}\n\nSwitch to the **Source mode** to view the text that you formatted in the Visual editor in [**Q14.4**]{style=\"color:green;\"} in Markdown format.\n\n[**Q14.5**]{style=\"color:green;\"} How is text highlighted in bold displayed in Markdown?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_51080\" onsubmit=\"return validate_form_51080()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_51080\" id=\"answer_51080_1\" value=\"# bold text\"/>\n# bold text\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_51080\" id=\"answer_51080_2\" value=\"*bold text*\"/>\n*bold text*\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_51080\" id=\"answer_51080_3\" value=\"BOLD TEXT\"/>\nBOLD TEXT\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_51080\" id=\"answer_51080_4\" value=\"[bold text]{.bold}\"/>\n[bold text]{.bold}\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_51080\" id=\"answer_51080_5\" value=\"**bold text**\"/>\n**bold text**\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_51080\"></div>\n</form>\n<script>function validate_form_51080() {var x, text; var x = document.forms['form_51080']['answer_51080'].value;if (x == '**bold text**'){text = 'That‚Äôs right! üéâ';} else {text = 'Hummm, are you sure? Go back to the Visual editor and format a word in bold there then switch back to the Source mode to see what happens.';} document.getElementById('result_51080').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ';text = res1 + res2 + res3 + res4;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n:::\n\n\n¬†\n\n[**Q14.6**]{style=\"color:green;\"} How is a first-level heading displayed in Markdown?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_36044\" onsubmit=\"return validate_form_36044()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_36044\" id=\"answer_36044_1\" value=\"**Heading 1**\"/>\n**Heading 1**\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_36044\" id=\"answer_36044_2\" value=\"&lt;h1&gt;Heading 1&lt;/h1&gt;\"/>\n&lt;h1&gt;Heading 1&lt;/h1&gt;\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_36044\" id=\"answer_36044_3\" value=\"HEADING 1\"/>\nHEADING 1\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_36044\" id=\"answer_36044_4\" value=\"*Heading 1*\"/>\n*Heading 1*\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_36044\" id=\"answer_36044_5\" value=\"# Heading 1\"/>\n# Heading 1\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_36044\"></div>\n</form>\n<script>function validate_form_36044() {var x, text; var x = document.forms['form_36044']['answer_36044'].value;if (x == '# Heading 1'){text = 'That‚Äôs right! üéâ';} else {text = 'Hummm, are you sure? How is the word ‚ÄúIntroduction‚Äù formatted?';} document.getElementById('result_36044').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ';text = res1 + res2 + res3 + res4 + res5;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n:::\n\n\n¬†\n\n[**Q14.7**]{style=\"color:green;\"} How are block quotes formatted in Markdown?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_11640\" onsubmit=\"return validate_form_11640()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_11640\" id=\"answer_11640_1\" value=\"Every line begins with &gt; followed by a space\"/>\nEvery line begins with &gt; followed by a space\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_11640\" id=\"answer_11640_2\" value=\"The text is coloured green\"/>\nThe text is coloured green\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_11640\" id=\"answer_11640_3\" value=\"Every line begins with &gt; followed by a tab\"/>\nEvery line begins with &gt; followed by a tab\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_11640\" id=\"answer_11640_4\" value=\"Every line begins with &gt;\"/>\nEvery line begins with &gt;\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_11640\"></div>\n</form>\n<script>function validate_form_11640() {var x, text; var x = document.forms['form_11640']['answer_11640'].value;if (x == 'Every line begins with > followed by a space'){text = 'That‚Äôs right! üéâ';} else {text = 'Hummm, are you sure? Go back to the Source code of your Quarto format and check out the formatting of a block quote.';} document.getElementById('result_11640').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5, res6;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ'; res6 = document.getElementById('result_11640').innerText == 'That‚Äôs right! üéâ';text = res1 + res2 + res3 + res4 + res5 + res6;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n:::\n\n\n¬†\n\n[**Q14.8**]{style=\"color:green;\"} How will the word `~~mystery~~` be formatted in Markdown?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_30975\" onsubmit=\"return validate_form_30975()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_30975\" id=\"answer_30975_1\" value=\"in italics\"/>\nin italics\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_30975\" id=\"answer_30975_2\" value=\"crossed-out\"/>\ncrossed-out\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_30975\" id=\"answer_30975_3\" value=\"in grey\"/>\nin grey\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_30975\" id=\"answer_30975_4\" value=\"as computer code\"/>\nas computer code\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_30975\" id=\"answer_30975_5\" value=\"as a subsection heading\"/>\nas a subsection heading\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_30975\"></div>\n</form>\n<script>function validate_form_30975() {var x, text; var x = document.forms['form_30975']['answer_30975'].value;if (x == 'crossed-out'){text = 'That‚Äôs right! üéâ';} else {text = 'Hummm, are you sure? Have you tried inserting <code>~~mystery~~</code> in the Source code of your Quarto format and then switching to the Visual editor to see what happens?';} document.getElementById('result_30975').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5, res6, res7;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ'; res6 = document.getElementById('result_11640').innerText == 'That‚Äôs right! üéâ'; res7 = document.getElementById('result_30975').innerText == 'That‚Äôs right! üéâ';text = res1 + res2 + res3 + res4 + res5 + res6 + res7;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n:::\n\n\n¬†\n:::\n\nThere are many more formatting options in **Markdown**. Below are a few more for you to try out.\n\n``` markdown\n## Lists\n\n-   Bulleted list item 1\n\n-   Item 2\n\n    -   Item 2a\n\n    -   Item 2b\n\n1.  Numbered list item 1\n\n2.  Item \n\nThe numbers are incremented automatically in the output.\n\n## Links and images\n\n<http://example.com>\n\n[linked phrase](http://example.com)\n\n![The Quarto logo](https://elenlefoll.github.io/RstatsTextbook/images/hex_Quarto.png){fig-alt=\"Quarto hex logo and the word quarto spelled in small case letters\"}\n\n## Tables\n\n| First Header | Second Header |\n|--------------|---------------|\n| Content Cell | Content Cell  |\n| Content Cell | Content Cell  |\n```\n\nThe best way to get the hang of Markdown is simply to try things out. You will also find a handy cheatsheet under *Help \\> Markdown Quick Reference*. Remember that you can always go back to the **Visual** mode to format your text, if that's easier for you. When it comes to debugging any Quarto syntax errors, however, it's usually easier to catch these in plain text, so you'll typically want to use the **Source** mode for that.\n\n## Code chunks {#sec-Chunks}\n\nTo run code inside a Quarto document, you need to insert a code chunk. There are three ways to do so:\n\n1.  Using the keyboard shortcut Cmd/Ctrl + Option + i\n2.  Clicking on the green \"Insert chunk\" button icon in the editor toolbar\n3.  Manually typing the chunk delimiters ```` ```{r} ```` and ```` ``` ````\n\nIt is definitely worth learning the keyboard shortcut as it will save you a lot of time in the long run!\n\nIn the code chunk below, `{r}` tells Quarto that this chunk is written in the programming language `R`. If you wanted to embed a chunk of Python code, you must begin it with ```` ```{python} ```` instead.\n\nUsing one of the three aforementioned options, insert the following `R` code chunk in your document.\n\n```` markdown\n```{{r}}\nlibrary(here)\nlibrary(tidyverse)\n```\n````\n\nAs you are working on your code within a Quarto document, you can either run:\n\n-   each individual line of code using the keyboard shortcut ‚åò/Ctrl ‚èé or\n-   the entire code chunk either by clicking the \"Run\"![](https://d33wubrfki0l68.cloudfront.net/18153fb9953057ee5cff086122bd26f9cee8fe93/3aba9/images/notebook-run-chunk.png)icon or using the shortcut ‚áß ‚åò/Ctrl ‚èé.\n\n*RStudio* will execute the code and display the results either within your document (below each chunk) or in the Console, depending on your *RStudio* settings.[^14_literateprogramming-5]\n\n[^14_literateprogramming-5]: You can change this behaviour in your *RStudio* preferences under *Tools \\> Global Options \\>* R Markdown by selecting or unselecting the option: \"Show output inline for all R Markdown documents\".\n\nChunk output can be customised with **chunk options**. There are many options to choose from but, the most important options control whether your code block should be executed when you render your Quarto document and what results are inserted in the rendered version:\n\n-   `eval: false` prevents code from being evaluated. And obviously, if the code is not run, no code outputs will be generated.\n\n-   `include: false` runs the code, but does not show the code or its outputs in the rendered document. This option is useful for code chunks that are not informative to the readers of your document.\n\n-   `echo: false` prevents the code, but not the results from appearing in the rendered document. This option is useful when you want to present the results of your analyses to people who are not interested in the underlying code.\n\n-   `message: false` or `warning: false` prevents messages or warnings from appearing in the rendered document.\n\nIt is also possible to **label** code chunks using the `label` option. This can help to navigate long Quarto documents and to quickly identify code chunks generating errors during rendering. Chunk labels should be short but meaningful. They should not contain spaces or any other special characters except hyphens (`-`).\n\nThe easiest way to choose a chunk option is by clicking the gear icon on the chunk you want to modify. This way, you can both choose a label and set up your chunk. If you want to write the code yourself, chunk options are placed at the top of the corresponding chunk following `#|`, as in the chunk below. As you can see, the `eval: false` chunk option means that the rendered document includes the mathematical operation `13 * 13`, but not the result because chunk was not executed during the rendering process.\n\n::: {layout-ncol=\"2\"}\n![Quarto document in Source mode in Rstudio](images/Quarto_eval-false.png)\n\n![Rendered HTML document opened in a browser](images/Quarto_rendered_eval-false.png)\n:::\n\n::: {.callout-tip collapse=\"false\"}\n#### Your turn! {.unnumbered}\n\nIn your Quarto document, add a label to your first `R` chunk and render your document to HTML.\n\n```` markdown\n```{{r}}\n#| label: setup\n\nlibrary(here)\nlibrary(tidyverse)\n```\n````\n\n[**Q14.9**]{style=\"color:green;\"} What is the output of the `setup` chunk in your rendered `.html` document?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_89826\" onsubmit=\"return validate_form_89826()\" method=\"post\">\n<label>\n<input type=\"checkbox\" id=\"answer_89826_1\" value=\"Nothing.\"/>\nNothing.\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_89826_2\" value=\"Two messages, one per loaded library.\"/>\nTwo messages, one per loaded library.\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_89826_3\" value=\"A conflict error message.\"/>\nA conflict error message.\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_89826_4\" value=\"An error message beginning with: &quot;Error in `library()`: ! there is no package called...\"/>\nAn error message beginning with: \"Error in `library()`: ! there is no package called...\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_89826_5\" value=\"An error message ending in: &quot;Execution halted&quot;.\"/>\nAn error message ending in: \"Execution halted\".\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_89826\"></div>\n</form>\n<script>function validate_form_89826() {var text; var x1 = document.getElementById('answer_89826_1'); var x2 = document.getElementById('answer_89826_2'); var x3 = document.getElementById('answer_89826_3'); var x4 = document.getElementById('answer_89826_4'); var x5 = document.getElementById('answer_89826_5'); if (x1.checked == false&x2.checked == true&x3.checked == false&x4.checked == false&x5.checked == false){text = 'That‚Äôs right! What you are seeing are messages that the {here} and the {tidyverse} libraries output when they are correctly loaded. To find out more about conflicts, see Section 9.2.';} else {text = 'No, that‚Äôs incorrect. If you are getting the fourth error message, this means that your document could not be rendered because one of the two packages has not been installed yet (or else you have misspelt the name of the package?). If you are getting the last error message, this means that there is a problem with your Quarto document, which means that it cannot be rendered. Read the rest of the error message to understand where the problem lies. It is very likely to be a small syntax error or typo.';} document.getElementById('result_89826').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5, res6, res7, res8;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ'; res6 = document.getElementById('result_11640').innerText == 'That‚Äôs right! üéâ'; res7 = document.getElementById('result_30975').innerText == 'That‚Äôs right! üéâ'; res8 = document.getElementById('result_89826').innerText == 'That‚Äôs right! What you are seeing are messages that the {here} and the {tidyverse} libraries output when they are correctly loaded. To find out more about conflicts, see Section 9.2.';text = res1 + res2 + res3 + res4 + res5 + res6 + res7 + res8;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"hint_60391\" onclick=\"return show_hint_60391()\"><br>üê≠ Click on the mouse for a hint.</div>\n<div id=\"result_60391\" onclick=\"return show_hint_60391()\"></div>\n<script>function show_hint_60391(){var x = document.getElementById('result_60391').innerHTML; if(!x){document.getElementById('result_60391').innerHTML = 'Remember that a conflict message is <em>not</em> an error message, it merely informs us about potential conflicts when two different packages have functions with the same name (see Section 9.2).';} else {document.getElementById('result_60391').innerHTML = '';}}</script>\n```\n\n:::\n:::\n\n\n¬†\n\n[**Q14.10**]{style=\"color:green;\"} Which code chunk option can you use to remove the two messages from the rendered version of your Quarto document, whilst still ensuring that the `setup` chunk is displayed and executed (so that the libraries can be used in future code chunks)?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_83585\" onsubmit=\"return validate_form_83585()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_83585\" id=\"answer_83585_1\" value=\"#| message: false\"/>\n#| message: false\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_83585\" id=\"answer_83585_2\" value=\"#| messages: false\"/>\n#| messages: false\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_83585\" id=\"answer_83585_3\" value=\"#| echo: false\"/>\n#| echo: false\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_83585\" id=\"answer_83585_4\" value=\"#| eval: true\"/>\n#| eval: true\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_83585\" id=\"answer_83585_5\" value=\"#| message: true\"/>\n#| message: true\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_83585\"></div>\n</form>\n<script>function validate_form_83585() {var x, text; var x = document.forms['form_83585']['answer_83585'].value;if (x == '#| message: false'){text = 'That‚Äôs right, well done!';} else {text = 'No, not quite. Have you tried inserting this code chunk option in your Quarto document and then rendering it to see what happens?';} document.getElementById('result_83585').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5, res6, res7, res8, res9;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ'; res6 = document.getElementById('result_11640').innerText == 'That‚Äôs right! üéâ'; res7 = document.getElementById('result_30975').innerText == 'That‚Äôs right! üéâ'; res8 = document.getElementById('result_89826').innerText == 'That‚Äôs right! What you are seeing are messages that the {here} and the {tidyverse} libraries output when they are correctly loaded. To find out more about conflicts, see Section 9.2.'; res9 = document.getElementById('result_83585').innerText == 'That‚Äôs right, well done!';text = res1 + res2 + res3 + res4 + res5 + res6 + res7 + res8 + res9;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"hint_16033\" onclick=\"return show_hint_16033()\"><br>üê≠ Click on the mouse for a hint.</div>\n<div id=\"result_16033\" onclick=\"return show_hint_16033()\"></div>\n<script>function show_hint_16033(){var x = document.getElementById('result_16033').innerHTML; if(!x){document.getElementById('result_16033').innerHTML = 'Code chunk options are applied to the entire chunk, so in this case, the option will apply to the outputs of both loaded libraries.';} else {document.getElementById('result_16033').innerHTML = '';}}</script>\n```\n\n:::\n:::\n\n\n¬†\n\n[**Q14.11**]{style=\"color:green;\"} Which code chunk option can you use to remove both the `setup` chunk and its outputs from the rendered version of your Quarto document, whilst still ensuring that the libraries are loaded so that their functions can be used further down in the document?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_78417\" onsubmit=\"return validate_form_78417()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_78417\" id=\"answer_78417_1\" value=\"#| include: false\"/>\n#| include: false\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_78417\" id=\"answer_78417_2\" value=\"#| display: false\"/>\n#| display: false\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_78417\" id=\"answer_78417_3\" value=\"#| echo: false\"/>\n#| echo: false\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_78417\" id=\"answer_78417_4\" value=\"#| echo: true\"/>\n#| echo: true\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_78417\" id=\"answer_78417_5\" value=\"#| eval: false\"/>\n#| eval: false\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_78417\"></div>\n</form>\n<script>function validate_form_78417() {var x, text; var x = document.forms['form_78417']['answer_78417'].value;if (x == '#| include: false'){text = 'That‚Äôs right, well done!';} else {text = 'No, not quite. Have you tried inserting this code chunk option in your Quarto document and then rendering it to see what happens?';} document.getElementById('result_78417').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5, res6, res7, res8, res9, res10;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ'; res6 = document.getElementById('result_11640').innerText == 'That‚Äôs right! üéâ'; res7 = document.getElementById('result_30975').innerText == 'That‚Äôs right! üéâ'; res8 = document.getElementById('result_89826').innerText == 'That‚Äôs right! What you are seeing are messages that the {here} and the {tidyverse} libraries output when they are correctly loaded. To find out more about conflicts, see Section 9.2.'; res9 = document.getElementById('result_83585').innerText == 'That‚Äôs right, well done!'; res10 = document.getElementById('result_78417').innerText == 'That‚Äôs right, well done!';text = res1 + res2 + res3 + res4 + res5 + res6 + res7 + res8 + res9 + res10;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"hint_3613\" onclick=\"return show_hint_3613()\"><br>üê≠ Click on the mouse for a hint.</div>\n<div id=\"result_3613\" onclick=\"return show_hint_3613()\"></div>\n<script>function show_hint_3613(){var x = document.getElementById('result_3613').innerHTML; if(!x){document.getElementById('result_3613').innerHTML = 'You may be tempted to choose <code>echo: false</code>, which will remove the code from the rendered document. However, this will also keep its outputs, which includes the messages that we do not want displayed in our rendered document.';} else {document.getElementById('result_3613').innerHTML = '';}}</script>\n```\n\n:::\n:::\n\n\n¬†\n:::\n\n## Inline code {#sec-Inline}\n\nSo far, we have seen how we can insert and format text in Quarto and how we can add code chunks with various options. But, to make the most of literate programming, we want to combine the two.\n\n::: callout-warning\n### Prerequisites\n\nThis chapter assumes that you are familiar with the following research article (which was first introduced in @sec-AccessingData):\n\n> DƒÖbrowska, Ewa. 2019. Experience, Aptitude, and Individual Differences in Linguistic Attainment: A Comparison of Native and Nonnative Speakers. Language Learning 69(S1). 72-100. <https://doi.org/10.1111/lang.12323>.\n\nOur starting point for this chapter are the author's **original datasets**, which are linked in the article's Appendix S4.\n\n> *Appendix S4: Datasets*\n>\n> DƒÖbrowska, E. (2018). L1 data \\[Data set\\]. Retrieved from [https://www.iris-database.org/iris/app/home/detail?id=york:935513](https://www.iris-database.org/details/9pplf-S7kw3)\n>\n> DƒÖbrowska, E. (2018). L2 data \\[Data set\\]. Retrieved from [https://www.iris-database.org/iris/app/home/detail?id=york:935514](https://www.iris-database.org/details/L8w1U-ZDgnH)\n\nYou will only be able to reproduce the analyses and answer the quiz questions from this chapter if you have successfully imported the two datasets from @DabrowskaExperienceAptitudeIndividual2019. To import the datasets, follow the instructions from @sec-RProject to @sec-ImportingDataCSV and complete [**Q6.8**]{style=\"color:green;\"}‚Äî[**Q6.12**]{style=\"color:green;\"}.\n:::\n\nIn your Quarto document, insert the following `R` chunk to load the DƒÖbrowska (2019) data.\n\n\n\n```{{r}}\n#| label: import-data\n#| include: false\n  \nL1.data <- read.csv(file = here(\"data\", \"L1_data.csv\"))\nL2.data <- read.csv(file = here(\"data\", \"L2_data.csv\"))\n```\n\nAs this new `import-data` chunk requires the `here()` function, make sure that it comes *after* the `setup` chunk because, when the document is rendered, code chunks will be executed in the order that they appear. If the {here} library is not loaded *before* the data are imported, the rendering process will be aborted and an error message will be displayed in the Console.\n\n\n\nTo begin, we will reproduce the following basic descriptive statistics about the two datasets:\n\n> Ninety native speakers (42 male and 48 female) and 67 nonnative speakers of English (21 male and 46 female) were recruited through personal contacts, church and social clubs, and advertisements in local newspapers.\n\nAs you may recall from @sec-VaRiablesAndFunctions, the number of native and non-native participants corresponds to the number of rows in the corresponding dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(L1.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 90\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(L2.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 67\n```\n\n\n:::\n:::\n\n\nIn Quarto, we can use **inline code** to dynamically insert these numbers in our paragraph. Inline code in `R` begins with `` `{r} `` and ends with a single backtick `` ` ``. It is best to use the Source mode to insert inline code.\n\nUsing the Source mode, add the following section to your Quarto document and render it to HTML.\n\n``` markdown\n## Descriptive statistics about the participants\n\n`{{r}} nrow(L1.data)` native speakers and `{{r}} nrow(L2.data)` nonnative speakers of English were recruited through personal contacts, church and social clubs, and advertisements in local newspapers.\n```\n\nThe rendered version should read like this (if you are obtaining different numbers, this either means that you have tempered with the original data files or that they have been corrupted)[^14_literateprogramming-6]:\n\n[^14_literateprogramming-6]: Using Microsoft Excel to open these `.csv` files can corrupt the files and can happen even if you did not use Excel yourself (e.g., on some Windows computers, this is sometimes done automatically as part of the download process). To find out more, see @sec-ExcelWarning.\n\n> ### Descriptive statistics about the participants {.unnumbered}\n>\n> 90 native speakers and 67 nonnative speakers of English were recruited through personal contacts, church and social clubs, and advertisements in local newspapers.\n\nInline code should only be used for very simple code, ideally with no more than one function, as in `` `{{r}} nrow(L1.data)` ``. To insert the output of more complex operations, it is best to write the code and save its output(s) to the local environment in a **hidden code chunk** (using the option `#| include: false`).\n\n```` markdown\n```{{r}}\n#| label: L1-gender\n#| include: false\n\nL1.males <- L1.data |>\n  filter(Gender == \"M\") |>\n  count()\n\nL1.females <- L1.data |>\n  filter(Gender == \"F\") |>\n  count()\n```\n````\n\n\n\nThe saved objects (`L1.males` and `L1.females`) each contain one number. They can therefore be directly called within the text as inline code.\n\n``` markdown\n`{{r}} nrow(L1.data)` native speakers (`{{r}} L1.males` male and `{{r}} L1.females` female) and `{{r}} nrow(L2.data)` nonnative speakers of English were recruited through personal contacts, church and social clubs, and advertisements in local newspapers.\n```\n\nWhen rendered, the paragraph will read:\n\n> 90 native speakers (42 male and 48 female) and 67 nonnative speakers of English were recruited through personal contacts, church and social clubs, and advertisements in local newspapers.\n\n::: {.callout-tip collapse=\"false\"}\n#### Your turn! {.unnumbered}\n\n[**Q14.12**]{style=\"color:green;\"} In your Quarto document, add a code chunk called `L2-gender` in which you compute the values necessary to complete the missing descriptive statistics in the sentence above. When rendered, your sentence should read:\n\n> 90 native speakers (42 male and 48 female) and 67 nonnative speakers of English (21 male and 46 female) were recruited through personal contacts, church and social clubs, and advertisements in local newspapers.\n\n¬†\n:::\n\n::: {.callout-note collapse=\"true\"}\n#### Click here for the solution to [**Q14.12**]{style=\"color:green;\"}\n\nTo save the number of male L2 participants as an `R` object, we can follow the same procedure as above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL2.males <- L2.data |>  \n  filter(Gender == \"M\") |>\n  count()\n```\n:::\n\n\nFor the number of female L2 participants, however, it's not so simple because some are labelled `f`, while others are labelled `F` (see [**Task 9.1**]{style=\"color:green;\"} in @sec-across).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(L2.data$Gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n f  F  M \n 6 40 21 \n```\n\n\n:::\n:::\n\n\nBelow are four possible methods to solve this issue (and there are many more still!):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Method 1:\nL2.Females <- L2.data |> \n  filter(Gender == \"F\") |> \n  count()\n\nL2.females <- L2.data |> \n  filter(Gender == \"f\") |> \n  count()\n\nL2.allfemales <- L2.Females + L2.females \n\n# Method 2:\nL2.allfemales <- L2.data |> \n  filter(Gender == \"F\" | Gender == \"f\") |> \n  count()\n\n# Method 3:\nL2.allfemales <- L2.data |> \n  filter(Gender %in% c(\"F\", \"f\")) |> \n  count()\n\n# Method 4:\nL2.allfemales <- L2.data |> \n  mutate(Gender = toupper(Gender)) |> \n  filter(Gender == \"F\") |> \n  count()\n```\n:::\n\n\nSome of these methods are perhaps more elegant than others, but they are all acceptable. After all, they all work! üôÉ\n\nOnce they are saved to the local environment, the values can be inserted inline in the usual way:\n\n``` markdown\n\n `{{r}} nrow(L1.data)` native speakers (`{{r}} L1.males` male and `{{r}} L1.females` female) and `{{r}} nrow(L2.data)` nonnative speakers of English (`{{r}} L2.males` male and `{{r}} L2.allfemales` female) were recruited through personal contacts, church and social clubs, and advertisements in local newspapers. \n```\n:::\n\nIf we want to start our paragraph with 90 written in as a word rather than in digits, we can use the `numbers_to_words function()` function from the {xfun} package. First, you'll need to install the {xfun} package and then add a line to your `setup` chunk to load it.[^14_literateprogramming-7]\n\n[^14_literateprogramming-7]: To make your Quarto document even more reproducible, you can replace your `setup` chunk with the following function that will automatically check if a package needs to be installed before it is loaded:\n\n    ```{{r}}\n    #| label: improved-setup\n    # List of packages necessary in this Quarto document:\n    packages <- c(\"here\", \"tidyverse\", \"xfun\")\n\n    # Function to install the packages that are not yet installed:\n    installed_packages <- packages %in%               rownames(installed.packages()) \n    if (any(installed_packages == FALSE)) { install.packages(packages[!installed_packages], repos = \"https://packagemanager.rstudio.com/all/latest\") }\n\n    # Function to load the packages without printing any messages:\n    invisible(lapply(packages, library, character.only = TRUE))\n    ```\n\n    Alternatively, consider using {renv} or {rix} for your project (see @sec-Packages).\n\n```` markdown\n```{{r}}\nlibrary(xfun)\n```\n````\n\nFirst, you can test that it works by running this code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumbers_to_words(nrow(L1.data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ninety\"\n```\n\n\n:::\n:::\n\n\nTo start our paragraph with a capital letter, we'll need to set the function's `cap` argument to `TRUE`.\n\n``` markdown\n`{{r}} numbers_to_words(nrow(L1.data), cap = TRUE)` native speakers (`{{r}} L1.males` male and `{{r}} L1.females` female) and `{{r}} nrow(L2.data)` nonnative speakers of English (`{{r}} L2.males` male and `{{r}} L2.allfemales` female) were recruited through personal contacts, church and social clubs, and advertisements in local newspapers.\n```\n\nNext, we want to reproduce the following descriptive statistics about the L1 participants:\n\n> The L1 participants were all born and raised in the United Kingdom and were selected to ensure a range of ages, occupations, and educational backgrounds. The age range was from 17 to 65 years (*M* = 38, *SD* = 16).\n\nWe can use the base `R` functions `min()`, `max()`, `mean()`, and `sd()` to compute these values.\n\n``` markdown\nThe L1 participants were all born and raised in the United Kingdom and were selected to ensure a range of ages, occupations, and educational backgrounds. The age range was from `{{r}} min(L1.data$Age)` to `{{r}} max(L1.data$Age)` years (*M* = `{{r}} mean(L1.data$Age)`, *SD* = `{{r}} sd(L1.data$Age)`).\n```\n\nThe rendered document will read:\n\n> The L1 participants were all born and raised in the United Kingdom and were selected to ensure a range of ages, occupations, and educational backgrounds. The age range was from 17 to 65 years (*M* = 37.5444444, *SD* = 16.148998).\n\nWhilst these values are correct, in practice, we want to round them off to the nearest integer. To this end, we can wrap the `round()` function around the `mean()` and `max()` function (see @sec-Nesting).\n\n``` markdown\nThe L1 participants were all born and raised in the United Kingdom and were selected to ensure a range of ages, occupations, and educational backgrounds. The age range was from `{{r}} min(L1.data$Age)` to `{{r}} max(L1.data$Age)` years (*M* = `{{r}} round(mean(L1.data$Age))`, *SD* = `{{r}} round(sd(L1.data$Age))`).\n```\n\nThe rendered document will read:\n\n> The L1 participants were all born and raised in the United Kingdom and were selected to ensure a range of ages, occupations, and educational backgrounds. The age range was from 17 to 65 years (*M* = 38, *SD* = 16).\n\n::: {.callout-note collapse=\"true\"}\n### More complex inline computations\n\nFor more complex computations, it is much better to compute the values in a dedicated code chunk. This also allows you to add **code annotation** which is important to ensure that other researchers (and your future self!) understand the reasoning behind the code.\n\nFor example, the following chunk containing annotated code can be used to reproduce the descriptive statistics concerning L1 participants' professional occupations and foreign language skills.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: L1-jobs\n\n# Counting manual job participants using a tidyverse solution:\nL1.manualjobs <- L1.data |> # Select data frame\n  count(OccupGroup) |> # Tally each level of OccupGroup\n  mutate(proportion = n/sum(n)) |> # Calculate proportion\n  filter(OccupGroup == \"M\") |> # Select only the manual occupations\n  pull(proportion) |> # Select just the proportion value\n  round(2)\n\n# Alternative: Counting manual job participants using a base R solution:\nL1.manualjobs <- round(proportions(table(L1.data$OccupGroup))[\"M\"], digits = 2)\n\n# Counting clerical job participants\nL1.clerical <- round(proportions(table(L1.data$OccupGroup))[\"C\"], digits = 2)\n\n# Counting professional job participants\nL1.pro.num <- L1.data |>\n  filter(OccupGroup %in% c('PS', 'PS ')) |>\n  count()\n\nL1.pro <- round((L1.pro.num/ nrow(L1.data)), digits = 2)\n\n# Counting professionally inactive participants\nL1.inactive <- round(proportions(table(L1.data$OccupGroup))[\"I\"], digits = 2)\n\n# Counting participants who speak at least one language other than English\nL1.otherlgs <- L1.data |>\n  filter(OtherLgs != \"None\") |>\n  count()\n```\n````\n:::\n\n\nThe values saved to the local environment as `R` objects can then be inserted inline within the Markdown text as follows:\n\n``` markdown\n`{{r}} numbers_to_words((L1.manualjobs*100), cap = TRUE)` percent of the participants held manual jobs, `{{r}} L1.clerical*100`% held clerical positions, and `{{r}} L1.pro*100`% had professional-level jobs or were studying for a degree; the remaining `{{r}} L1.inactive*100`% were occupationally inactive (i.e., unemployed, retired, or homemakers). In terms of education, participants‚Äô backgrounds ranged from no formal qualifications to Ph.D., with corresponding differences in the number of years spent in full-time education (from `{{r}} min(L1.data$EduYrs)` to `{{r}} max(L1.data$EduYrs)`; *M* = `{{r}} round(mean(L1.data$EduYrs))`, *SD* = `{{r}} round(sd(L1.data$EduYrs))`). `{{r}} L1.otherlgs` participants reported a working knowledge of another language; the rest described themselves as monolinguals.\n```\n\nüßë‚Äçüíª Add this section to your Quarto document and render it to HTML. Compare the values in your rendered document with the original ones from the published study.\n\n> Twenty-two percent of the participants held manual jobs, 24% held clerical positions, and 28% had professional-level jobs or were studying for a degree; the remaining 26% were occupationally inactive (i.e., unemployed, retired, or homemakers). In terms of education, participants' backgrounds ranged from no formal qualifications to Ph.D., with corresponding differences in the number of years spent in full-time education (from 10 to 21; M = 14, SD = 2). Six participants reported a working knowledge of another language; the rest described themselves as monolinguals [@DabrowskaExperienceAptitudeIndividual2019: 6].\n\n[**Q14.11**]{style=\"color:green;\"} Compare the rendered version of your document with the original descriptive statistics reported in DƒÖbrowska [@DabrowskaExperienceAptitudeIndividual2019: 6]. Could you successfully **reproduce** these descriptive statistics? Which values are different?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_40599\" onsubmit=\"return validate_form_40599()\" method=\"post\">\n<label>\n<input type=\"checkbox\" id=\"answer_40599_1\" value=\"None of them.\"/>\nNone of them.\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_40599_2\" value=\"The number of non-monolingual L1 participants.\"/>\nThe number of non-monolingual L1 participants.\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_40599_3\" value=\"The standard deviations.\"/>\nThe standard deviations.\n</label>\n<br/>\n<label>\n<input type=\"checkbox\" id=\"answer_40599_4\" value=\"The values expressed in percentages.\"/>\nThe values expressed in percentages.\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_40599\"></div>\n</form>\n<script>function validate_form_40599() {var text; var x1 = document.getElementById('answer_40599_1'); var x2 = document.getElementById('answer_40599_2'); var x3 = document.getElementById('answer_40599_3'); var x4 = document.getElementById('answer_40599_4'); if (x1.checked == true&x2.checked == false&x3.checked == false&x4.checked == false){text = '‚úÖ';} else {text = 'That‚Äôs strange‚Ä¶ All the values should be actually be exactly the same.';} document.getElementById('result_40599').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5, res6, res7, res8, res9, res10, res11;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ'; res6 = document.getElementById('result_11640').innerText == 'That‚Äôs right! üéâ'; res7 = document.getElementById('result_30975').innerText == 'That‚Äôs right! üéâ'; res8 = document.getElementById('result_89826').innerText == 'That‚Äôs right! What you are seeing are messages that the {here} and the {tidyverse} libraries output when they are correctly loaded. To find out more about conflicts, see Section 9.2.'; res9 = document.getElementById('result_83585').innerText == 'That‚Äôs right, well done!'; res10 = document.getElementById('result_78417').innerText == 'That‚Äôs right, well done!'; res11 = document.getElementById('result_40599').innerText == '‚úÖ';text = res1 + res2 + res3 + res4 + res5 + res6 + res7 + res8 + res9 + res10 + res11;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n:::\n\n:::\n\n::: content-hidden\n### Now it's your turn! ü™Ñ {.unnumbered}\n\n**This is an extra, optional [task]{style=\"color:green;\"}** for class/workshop participants.\n\nReproduce the following paragraph containing descriptive statistics about the L2 participants [@DabrowskaExperienceAptitudeIndividual2019: 6]:\n\n> The nonnative participants ranged in age from 20 to 62 years (M = 33, SD = 9). AoA ranged from 16 to 49 (M = 25, SD = 8) and LoR from 3 to 42 years (M = 7, SD = 6). They came from a variety of language backgrounds, including Polish, Russian, Lithuanian, Mandarin/Cantonese, German, Greek, French, Italian, Spanish, and Malaysian. The participants varied widely in terms of educational attainment (from 8 to 24 years spent in full-time education), although as a group they had more schooling than the native participants (M = 16 years, SD = 3). Thirty-nine percent of the participants obtained all of their educational qualifications in their home country; 45% had up to 3 years of education in the United Kingdom or another English-speaking country; and 16% had studied in an English-speaking country for 4 or more years. Thirty-one percent of the sample held various manual jobs, 49% had professional-level jobs or were full-time students, and 15% held clerical posts; the remaining 4% were retired, unemployed, or homemakers.\n\n#### L2 Participants {.unnumbered}\n\n\n\nThe nonnative participants ranged in age from ... to ... years (*M* = ..., *SD* = ...). AoA ranged from ... to ... (*M* = ..., *SD* = ...) and LoR from ... to ... years (*M* = ..., *SD* = ...). They came from a variety of language backgrounds, including Polish, Russian, Lithuanian, Mandarin/Cantonese, German, Greek, French, Italian, Spanish, and Malaysian. The participants varied widely in terms of educational attainment (from ... to ... years spent in full-time education), although as a group they had more schooling than the native participants (*M* = ... years, *SD* = ...). ... percent of the participants obtained all of their educational qualifications in their home country; ...% had up to 3 years of education in the United Kingdom or another English-speaking country; and ...% had studied in an English-speaking country for 4 or more years. ... percent of the sample held various manual jobs, ...% had professional-level jobs or were full-time students, and ...% held clerical posts; the remaining ...% were retired, unemployed, or homemakers.\n:::\n\n## Tables {#sec-QuartoTables}\n\nThe easiest way to manually construct a table in a Quarto document is to switch to **Visual** mode and click on *Insert¬†\\>¬†Table* or use the shortcut Option + Cmd + T. You can choose how many rows and columns you need and then simply complete your table in the Visual editor.\n\n|                               | Same data    | Different data |\n|-------------------------------|--------------|----------------|\n| **Same analysis method**      | Reproducible | Replicable     |\n| **Different analysis method** | Robust       | Generalisable  |\n\n: Terminology used in this chapter\n\n¬†\n\nWhen you switch to the Source mode, you will see that, in **Markdown** (see @sec-Markdown), your table has been converted to a **pipe table**. Pipe tables allow for column alignment and captions.\n\n``` markdown\n|                               | Same data    | Different data |\n|-------------------------------|--------------|----------------|\n| **Same analysis method**      | Reproducible | Replicable     |\n| **Different analysis method** | Robust       | Generalisable  |\n\n: Terminology used in this chapter\n```\n\nMost of the time, however, you will want to display tabular results based on data that you have imported, manipulated, and/or analysed in `R`. If the output of a code chunk within your Quarto document is a table, it will automatically be displayed in your rendered document (unless you specify a chunk option to hide its output, see @sec-Chunks).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL1.data |> \n  count(OtherLgs,\n        sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  OtherLgs  n\n1     None 84\n2   German  3\n3   French  2\n4  Spanish  1\n```\n\n\n:::\n:::\n\n\nHowever, this output is not particularly nicely formatted. There are several `R` packages designed to create tables that are \"presentation-ready\". One of these is the **{gt}** package. Beyond its main function `gt()`, it offers many more functions to further style tables such as `cols_label()` to change the column headers.\n\n\n::: {#tbl-L1-languages .cell .tbl-cap-location-top tbl-cap='Example of a {gt} table' tbl-colwidths='[80,20]'}\n\n````{.cell-code}\n```{{r}}\n#| label: tbl-L1-languages\n#| tbl-cap: \"Example of a {gt} table\"\n#| tbl-cap-location: top\n#| tbl-colwidths: [80,20]\n\n#install.packages(\"gt\")\nlibrary(gt)\n\nL1.data |> \n  count(OtherLgs, \n        sort = TRUE) |> \n  gt() |> \n  cols_label(\n    OtherLgs = \"Additional language\", \n    n = \"N\")\n```\n````\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"njwmwjirdh\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#njwmwjirdh table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#njwmwjirdh thead, #njwmwjirdh tbody, #njwmwjirdh tfoot, #njwmwjirdh tr, #njwmwjirdh td, #njwmwjirdh th {\n  border-style: none;\n}\n\n#njwmwjirdh p {\n  margin: 0;\n  padding: 0;\n}\n\n#njwmwjirdh .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#njwmwjirdh .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#njwmwjirdh .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#njwmwjirdh .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#njwmwjirdh .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#njwmwjirdh .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#njwmwjirdh .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#njwmwjirdh .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#njwmwjirdh .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#njwmwjirdh .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#njwmwjirdh .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#njwmwjirdh .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#njwmwjirdh .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#njwmwjirdh .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#njwmwjirdh .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#njwmwjirdh .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#njwmwjirdh .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#njwmwjirdh .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#njwmwjirdh .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#njwmwjirdh .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#njwmwjirdh .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#njwmwjirdh .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#njwmwjirdh .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#njwmwjirdh .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#njwmwjirdh .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#njwmwjirdh .gt_left {\n  text-align: left;\n}\n\n#njwmwjirdh .gt_center {\n  text-align: center;\n}\n\n#njwmwjirdh .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#njwmwjirdh .gt_font_normal {\n  font-weight: normal;\n}\n\n#njwmwjirdh .gt_font_bold {\n  font-weight: bold;\n}\n\n#njwmwjirdh .gt_font_italic {\n  font-style: italic;\n}\n\n#njwmwjirdh .gt_super {\n  font-size: 65%;\n}\n\n#njwmwjirdh .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#njwmwjirdh .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#njwmwjirdh .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#njwmwjirdh .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#njwmwjirdh .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#njwmwjirdh .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#njwmwjirdh .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#njwmwjirdh .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#njwmwjirdh div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"OtherLgs\">Additional language</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"n\">N</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"OtherLgs\" class=\"gt_row gt_left\">None</td>\n<td headers=\"n\" class=\"gt_row gt_right\">84</td></tr>\n    <tr><td headers=\"OtherLgs\" class=\"gt_row gt_left\">German</td>\n<td headers=\"n\" class=\"gt_row gt_right\">3</td></tr>\n    <tr><td headers=\"OtherLgs\" class=\"gt_row gt_left\">French</td>\n<td headers=\"n\" class=\"gt_row gt_right\">2</td></tr>\n    <tr><td headers=\"OtherLgs\" class=\"gt_row gt_left\">Spanish</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nIn addition, Quarto also has a range of **chunk options** to customise the display of tables, including `tbl-cap` for the addition of a table caption and `tbl-cap-location` to determine where the caption is placed. In the above chunk, the table's `label` chunk option begins with `tbl-`. This allows for in-text cross-referencing to the table with the insertion of `@tbl-L1-languages` in this Quarto document, which is rendered as the following linked cross-reference: @tbl-L1-languages.\n\n::: callout-note\n#### Going further\n\nThe Quarto guide provides further information about formatting tables: <https://quarto.org/docs/authoring/tables.html>.\n:::\n\n## Figures {#sec-QuartoFigures}\n\nIn Quarto documents, figures can either be inserted from image files (e.g., `.png` or `.jpeg` files, see @sec-FileExtensions) or generated as a result of a code chunk.\n\n### Images {#sec-QuartoImages}\n\nTo embed an image from an external file, you can use the \"Insert\" menu in *RStudio*'s **Visual** editor and select \"Figure / Image\" (see @fig-InsertingImage). This will open up a menu where you can select the image that you want to insert, as well as add **alt-text** (see @sec-StatsLabs) and a **caption**. The easiest way to adjust the size of an embedded image is to click on the image and then adjust the **size** of the image with the blue circle in the bottom-right corner of the image (see @fig-InsertingImage).\n\n![Adjusting the size of an image in Quarto](images/Quarto_Insert_image.png){#fig-InsertingImage fig-alt=\"Cartoon drawing of a pipe with three entry points for \\\"data\\\" and the output producing a research paper with text, a table, and a plot. Sections of the pipe are labelled: data cleaning, overview, figures, modelling, and text.\" width=\"480\"}\n\nBelow is the source code for @fig-RealisticPipeline in Markdown. The code includes the **relative path** to the image file (see @sec-FoldersPaths) relative to the **project directory** (see @sec-RProject). In the example below, the image file `BERD_pipeline-real.jpg` is located in a subfolder called `images`. If you want to try this out yourself, you will need to create this subfolder within your own project directory and save @fig-RealisticPipeline to this subfolder.\n\n``` markdown\n![A more realistic research pipeline [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0/) @seiboldBERDCourseMake2023](images/BERD_pipeline-real.jpg){#fig-RealisticPipeline fig-alt=\"Cartoon drawing of a complex set of pipes with various entry points for \\\"data\\\" and a single output: a research paper with text, a table, and a plot. Sections of the pipe are coloured according to the processes that they correspond to. These include data cleaning, overview, figures, modelling, and text.\" width=\"480\"}\n```\n\n![A more realistic research pipeline [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0/) @seiboldBERDCourseMake2023](images/BERD_pipeline-real.jpg){#fig-RealisticPipeline fig-alt=\"Cartoon drawing of a complex set of pipes with various entry points for \\\"data\\\" and a single output: a research paper with text, a table, and a plot. Sections of the pipe are coloured according to the processes that they correspond to. These include data cleaning, overview, figures, modelling, and text.\" width=\"480\"}\n\nThis example embedded image includes a caption (that, itself, includes a link), an alt-text (see @sec-StatsLabs), and a custom width in pixel. Note that, in the source code, special characters such as quotation marks need to be escaped using a backslash `\\`. Tags beginning with `#fig-` can be used to cross-reference images by replacing the `#` with `@`. Hence, in this chapter, `@fig-RealisticPipeline` in Markdown is rendered as @fig-RealisticPipeline.\n\nFigures can be arranged in many ways. The example below uses the `:::` **div syntax** to display two images side-by-side. This syntax also allows for subcaptions as shown in @fig-Pipelines.\n\n``` markdown\n::: {#fig-Pipelines layout-ncol=\"2\"}\n![An idealised research pipeline](images/BERD_pipeline-simple.jpg){#fig-IdealisedPipeline}\n\n![A more realistic research pipeline](images/BERD_pipeline-real.jpg){#fig-RealisticPipeline2}\n\nResearch workflows as pipelines [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0/) @seiboldBERDCourseMake2023\n:::\n```\n\n::: {#fig-Pipelines layout-ncol=\"2\"}\n![An idealised research pipeline](images/BERD_pipeline-simple.jpg){#fig-IdealisedPipeline}\n\n![A more realistic research pipeline](images/BERD_pipeline-real.jpg){#fig-RealisticPipeline2}\n\nResearch workflows as pipelines [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0/) @seiboldBERDCourseMake2023\n:::\n\n::: callout-note\n#### Going further\n\nTo find out more about inserting and arranging figures, check out the detailed Quarto guide: <https://quarto.org/docs/authoring/figures.html>.\n:::\n\n### Plots {#sec-QuartoPlots}\n\nIf your Quarto document includes code chunks that generate plots, they will automatically be integrated in your rendered document. Plots will either appear immediately after the corresponding code chunk or where the code chunk would be, if you chose to hide the code chunk that generated the plot with the `echo: false` option.\n\nAs with computed tables (see @sec-QuartoTables), various code chunk options can be added to customise the look of computed figures in rendered documents. Compare the code chunk options below and the generated output in @fig-scatterplot.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: fig-scatterplot\n#| fig-cap: \"L2 participants' lexical proficiency in English and their professional occupational group\"\n#| fig-height: 5\n#| fig-asp: 0.618\n#| message: false\n\nL2.data |> \n  ggplot(mapping = aes(x = VocabR, \n                       y = CollocR)) +\n  geom_point(aes(colour = OccupGroup),\n             size = 2) +\n  geom_smooth(method = \"lm\") +\n  scale_colour_viridis_d() +\n  labs(x = \"Vocabulary test scores\",\n       y = \"Collocation test scores\",\n       colour = \"Occupational\\ngroups\") +\n  theme_bw()\n```\n````\n\n::: {.cell-output-display}\n![L2 participants' lexical proficiency in English and their professional occupational group](14_LiterateProgramming_files/figure-html/fig-scatterplot-1.png){#fig-scatterplot width=576}\n:::\n:::\n\n\nAccording to the authors of \"R for Data Science\", figure sizing and scaling is \"an art and science and getting things right can require an iterative trial-and-error approach\" [@wickhamDataScienceImport2023]. This is because there are five main options that control figure sizing: `fig-width`, `fig-height`, `fig-asp`, `out-width` and `out-height`. The first three control the size of the figure created by `R`, whereas the latter two control the size at which it is inserted in the rendered document.\n\nIf you are sharing your research analyses and results in HTML format, you can embed **interactive plots** (see @sec-InteractivePlots) in your Quarto documents. Hover over @fig-scatterplot-plotly to start exploring the data interactively.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show `R` code to generate the interactive plot below.\"}\n#install.packages(\"plotly\")\nlibrary(plotly)\n\nL2.scatter2 <- L2.data |> \n  ggplot(mapping = aes(x = VocabR, \n                       y = CollocR,\n                       text = paste(\"L1:\", NativeLg, \"</br>Age:\", Age, \"</br>Years in formal education:\", EduTotal, \"</br>Job:\", Occupation))) +      \n  geom_point(aes(colour = OccupGroup),\n             size = 2) +\n  scale_colour_viridis_d() +\n  labs(x = \"Vocabulary test scores\",\n       y = \"Grammar test scores\",\n       colour = \"Occupational\\ngroups\") +\n  theme_bw()\n\nggplotly(L2.scatter2)\n```\n\n::: {#fig-scatterplot-plotly .cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-1cb4530c45b46d0ac3ac\" style=\"width:100%;height:401px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1cb4530c45b46d0ac3ac\">{\"x\":{\"data\":[{\"x\":[46,34,40,47,41,40,41,18,32,48],\"y\":[14,7,21,26,18,29,28,13,9,30],\"text\":[\"VocabR: 46<br />CollocR: 14<br />L1: Spanish <\\/br>Age: 39 <\\/br>Years in formal education: 15 <\\/br>Job: Data entry<br />OccupGroup: C\",\"VocabR: 34<br />CollocR:  7<br />L1: Polish <\\/br>Age: 29 <\\/br>Years in formal education: 12 <\\/br>Job: inventory taker<br />OccupGroup: C\",\"VocabR: 40<br />CollocR: 21<br />L1: Polish <\\/br>Age: 28 <\\/br>Years in formal education: 14 <\\/br>Job: Admin Assistant<br />OccupGroup: C\",\"VocabR: 47<br />CollocR: 26<br />L1: Polish/Russian <\\/br>Age: 30 <\\/br>Years in formal education: 15 <\\/br>Job: Housing Services Officer<br />OccupGroup: C\",\"VocabR: 41<br />CollocR: 18<br />L1: Spanish <\\/br>Age: 38 <\\/br>Years in formal education: 17 <\\/br>Job: Media Asst.<br />OccupGroup: C\",\"VocabR: 40<br />CollocR: 29<br />L1: Cantonese/Hokkein <\\/br>Age: 51 <\\/br>Years in formal education: 16 <\\/br>Job: Finance Assistant<br />OccupGroup: C\",\"VocabR: 41<br />CollocR: 28<br />L1: German <\\/br>Age: 28 <\\/br>Years in formal education: 16 <\\/br>Job: Student experience asst.<br />OccupGroup: C\",\"VocabR: 18<br />CollocR: 13<br />L1: Mandarin Chinese <\\/br>Age: 25 <\\/br>Years in formal education: 8.5 <\\/br>Job: Receptionist in Chinese Clinic<br />OccupGroup: C\",\"VocabR: 32<br />CollocR:  9<br />L1: Polish <\\/br>Age: 32 <\\/br>Years in formal education: 16 <\\/br>Job: office manager<br />OccupGroup: C\",\"VocabR: 48<br />CollocR: 30<br />L1: russian <\\/br>Age: 30 <\\/br>Years in formal education: 21 <\\/br>Job: IT Tech support<br />OccupGroup: C\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(68,1,84,1)\",\"opacity\":1,\"size\":7.559055118110237,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(68,1,84,1)\"}},\"hoveron\":\"points\",\"name\":\"C\",\"legendgroup\":\"C\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[50,29,51],\"y\":[23,13,36],\"text\":[\"VocabR: 50<br />CollocR: 23<br />L1: Polish <\\/br>Age: 35 <\\/br>Years in formal education: 18 <\\/br>Job: Househusband<br />OccupGroup: I\",\"VocabR: 29<br />CollocR: 13<br />L1: Polish <\\/br>Age: 41 <\\/br>Years in formal education: 15 <\\/br>Job: house manager<br />OccupGroup: I\",\"VocabR: 51<br />CollocR: 36<br />L1: Cantonese <\\/br>Age: 62 <\\/br>Years in formal education: 14 <\\/br>Job: Retired<br />OccupGroup: I\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(49,104,142,1)\",\"opacity\":1,\"size\":7.559055118110237,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(49,104,142,1)\"}},\"hoveron\":\"points\",\"name\":\"I\",\"legendgroup\":\"I\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[32,39,34,40,32,49,26,38,13,55,47,37,47,37,32,21,48,39,20,37,29],\"y\":[8,13,14,14,8,9,9,8,10,19,11,11,18,13,26,8,25,5,6,21,11],\"text\":[\"VocabR: 32<br />CollocR:  8<br />L1: Polish <\\/br>Age: 22 <\\/br>Years in formal education: 14 <\\/br>Job: Cleaner<br />OccupGroup: M\",\"VocabR: 39<br />CollocR: 13<br />L1: Polish <\\/br>Age: 26 <\\/br>Years in formal education: 17 <\\/br>Job: barmaid<br />OccupGroup: M\",\"VocabR: 34<br />CollocR: 14<br />L1: Polish <\\/br>Age: 29 <\\/br>Years in formal education: 17 <\\/br>Job: factory worker<br />OccupGroup: M\",\"VocabR: 40<br />CollocR: 14<br />L1: Polish <\\/br>Age: 31 <\\/br>Years in formal education: 13 <\\/br>Job: Cleaner<br />OccupGroup: M\",\"VocabR: 32<br />CollocR:  8<br />L1: Polish <\\/br>Age: 31 <\\/br>Years in formal education: 13 <\\/br>Job: Horticultarist<br />OccupGroup: M\",\"VocabR: 49<br />CollocR:  9<br />L1: Polish <\\/br>Age: 33 <\\/br>Years in formal education: 19 <\\/br>Job: Product Operative<br />OccupGroup: M\",\"VocabR: 26<br />CollocR:  9<br />L1: Polish <\\/br>Age: 47 <\\/br>Years in formal education: 17 <\\/br>Job: Product Operative<br />OccupGroup: M\",\"VocabR: 38<br />CollocR:  8<br />L1: Polish <\\/br>Age: 48 <\\/br>Years in formal education: 14 <\\/br>Job: Product Operative<br />OccupGroup: M\",\"VocabR: 13<br />CollocR: 10<br />L1: Mandarin/ Cantonese <\\/br>Age: 52 <\\/br>Years in formal education: 15 <\\/br>Job: Cashier<br />OccupGroup: M\",\"VocabR: 55<br />CollocR: 19<br />L1: Lithuanian <\\/br>Age: 24 <\\/br>Years in formal education: 14 <\\/br>Job: bar staff<br />OccupGroup: M\",\"VocabR: 47<br />CollocR: 11<br />L1: Polish <\\/br>Age: 28 <\\/br>Years in formal education: 17 <\\/br>Job: care worker<br />OccupGroup: M\",\"VocabR: 37<br />CollocR: 11<br />L1: Polish <\\/br>Age: 28 <\\/br>Years in formal education: 14 <\\/br>Job: Driver<br />OccupGroup: M\",\"VocabR: 47<br />CollocR: 18<br />L1: Polish <\\/br>Age: 31 <\\/br>Years in formal education: 19 <\\/br>Job: After School Club Assistant<br />OccupGroup: M\",\"VocabR: 37<br />CollocR: 13<br />L1: Polish <\\/br>Age: 39 <\\/br>Years in formal education: 14 <\\/br>Job: Bus Mechanic<br />OccupGroup: M\",\"VocabR: 32<br />CollocR: 26<br />L1: Mandarin <\\/br>Age: 25 <\\/br>Years in formal education: 12 <\\/br>Job: Waitress<br />OccupGroup: M\",\"VocabR: 21<br />CollocR:  8<br />L1: Polish <\\/br>Age: 55 <\\/br>Years in formal education: 13 <\\/br>Job: Product Operative<br />OccupGroup: M\",\"VocabR: 48<br />CollocR: 25<br />L1: Lithunanina <\\/br>Age: 23 <\\/br>Years in formal education: 13 <\\/br>Job: Bar staff<br />OccupGroup: M\",\"VocabR: 39<br />CollocR:  5<br />L1: Polish <\\/br>Age: 33 <\\/br>Years in formal education: 13 <\\/br>Job: cleaner<br />OccupGroup: M\",\"VocabR: 20<br />CollocR:  6<br />L1: Polish <\\/br>Age: 37 <\\/br>Years in formal education: 13 <\\/br>Job: Product Operative<br />OccupGroup: M\",\"VocabR: 37<br />CollocR: 21<br />L1: Polish <\\/br>Age: 46 <\\/br>Years in formal education: 10 <\\/br>Job: driver<br />OccupGroup: M\",\"VocabR: 29<br />CollocR: 11<br />L1: Cantonese <\\/br>Age: 40 <\\/br>Years in formal education: 17 <\\/br>Job: Cashier<br />OccupGroup: M\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(53,183,121,1)\",\"opacity\":1,\"size\":7.559055118110237,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(53,183,121,1)\"}},\"hoveron\":\"points\",\"name\":\"M\",\"legendgroup\":\"M\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[44,39,52,44,31,30,39,37,50,45,19,38,39,50,48,9,32,56,53,36,44,48,33,44,50,29,43,46,49,49,36,37,29],\"y\":[27,9,29,24,18,3,14,5,23,14,9,26,28,26,21,24,27,26,14,10,15,23,10,36,15,14,29,27,10,11,34,20,13],\"text\":[\"VocabR: 44<br />CollocR: 27<br />L1: Lithuanian <\\/br>Age: 20 <\\/br>Years in formal education: 13 <\\/br>Job: Student<br />OccupGroup: PS\",\"VocabR: 39<br />CollocR:  9<br />L1: polish <\\/br>Age: 22 <\\/br>Years in formal education: 16 <\\/br>Job: student<br />OccupGroup: PS\",\"VocabR: 52<br />CollocR: 29<br />L1: Italian <\\/br>Age: 23 <\\/br>Years in formal education: 14 <\\/br>Job: Student<br />OccupGroup: PS\",\"VocabR: 44<br />CollocR: 24<br />L1: Lituanian <\\/br>Age: 22 <\\/br>Years in formal education: 16 <\\/br>Job: Student<br />OccupGroup: PS\",\"VocabR: 31<br />CollocR: 18<br />L1: Polish <\\/br>Age: 22 <\\/br>Years in formal education: 16 <\\/br>Job: student<br />OccupGroup: PS\",\"VocabR: 30<br />CollocR:  3<br />L1: Polish <\\/br>Age: 23 <\\/br>Years in formal education: 16 <\\/br>Job: student<br />OccupGroup: PS\",\"VocabR: 39<br />CollocR: 14<br />L1: Polish <\\/br>Age: 32 <\\/br>Years in formal education: 10 <\\/br>Job: self employed<br />OccupGroup: PS\",\"VocabR: 37<br />CollocR:  5<br />L1: Spanish <\\/br>Age: 25 <\\/br>Years in formal education: 15 <\\/br>Job: Intern<br />OccupGroup: PS\",\"VocabR: 50<br />CollocR: 23<br />L1: french <\\/br>Age: 26 <\\/br>Years in formal education: 19 <\\/br>Job: student<br />OccupGroup: PS\",\"VocabR: 45<br />CollocR: 14<br />L1: polish <\\/br>Age: 21 <\\/br>Years in formal education: 14 <\\/br>Job: student<br />OccupGroup: PS\",\"VocabR: 19<br />CollocR:  9<br />L1: Mandarine Chinese <\\/br>Age: 27 <\\/br>Years in formal education: 24 <\\/br>Job: PhD candidate<br />OccupGroup: PS\",\"VocabR: 38<br />CollocR: 26<br />L1: Polish <\\/br>Age: 28 <\\/br>Years in formal education: 18 <\\/br>Job: Student<br />OccupGroup: PS\",\"VocabR: 39<br />CollocR: 28<br />L1: Polish <\\/br>Age: 22 <\\/br>Years in formal education: 14 <\\/br>Job: Student<br />OccupGroup: PS\",\"VocabR: 50<br />CollocR: 26<br />L1: Lithuanian <\\/br>Age: 24 <\\/br>Years in formal education: 15 <\\/br>Job: Student<br />OccupGroup: PS\",\"VocabR: 48<br />CollocR: 21<br />L1: Polish <\\/br>Age: 30 <\\/br>Years in formal education: 18 <\\/br>Job: Teacher<br />OccupGroup: PS\",\"VocabR:  9<br />CollocR: 24<br />L1: Polish <\\/br>Age: 31 <\\/br>Years in formal education: 16 <\\/br>Job: Freelance Interpreter<br />OccupGroup: PS\",\"VocabR: 32<br />CollocR: 27<br />L1: chinese <\\/br>Age: 34 <\\/br>Years in formal education: 17 <\\/br>Job: chemist<br />OccupGroup: PS\",\"VocabR: 56<br />CollocR: 26<br />L1: greek <\\/br>Age: 37 <\\/br>Years in formal education: 21 <\\/br>Job: physicist<br />OccupGroup: PS\",\"VocabR: 53<br />CollocR: 14<br />L1: chinese <\\/br>Age: 29 <\\/br>Years in formal education: 19 <\\/br>Job: student<br />OccupGroup: PS\",\"VocabR: 36<br />CollocR: 10<br />L1: Polish <\\/br>Age: 31 <\\/br>Years in formal education: 18 <\\/br>Job: Research Assistant<br />OccupGroup: PS\",\"VocabR: 44<br />CollocR: 15<br />L1: Polish <\\/br>Age: 37 <\\/br>Years in formal education: 17 <\\/br>Job: Mechanical Services Engineer<br />OccupGroup: PS\",\"VocabR: 48<br />CollocR: 23<br />L1: Chinese <\\/br>Age: 28 <\\/br>Years in formal education: 21 <\\/br>Job: pharmacist<br />OccupGroup: PS\",\"VocabR: 33<br />CollocR: 10<br />L1: Mandarine Chinese <\\/br>Age: 46 <\\/br>Years in formal education: 16 <\\/br>Job: Herbalist<br />OccupGroup: PS\",\"VocabR: 44<br />CollocR: 36<br />L1: mandarin/malaysian <\\/br>Age: 27 <\\/br>Years in formal education: 17 <\\/br>Job: pharmacist<br />OccupGroup: PS\",\"VocabR: 50<br />CollocR: 15<br />L1: polish <\\/br>Age: 33 <\\/br>Years in formal education: 18 <\\/br>Job: teacher<br />OccupGroup: PS\",\"VocabR: 29<br />CollocR: 14<br />L1: Polish <\\/br>Age: 42 <\\/br>Years in formal education: 15 <\\/br>Job: self employed<br />OccupGroup: PS\",\"VocabR: 43<br />CollocR: 29<br />L1: french <\\/br>Age: 30 <\\/br>Years in formal education: 15 <\\/br>Job: academic tutor<br />OccupGroup: PS\",\"VocabR: 46<br />CollocR: 27<br />L1: Polish <\\/br>Age: 35 <\\/br>Years in formal education: 17 <\\/br>Job: Researcher<br />OccupGroup: PS\",\"VocabR: 49<br />CollocR: 10<br />L1: polish <\\/br>Age: 39 <\\/br>Years in formal education: 18 <\\/br>Job: student<br />OccupGroup: PS\",\"VocabR: 49<br />CollocR: 11<br />L1: Mandarine Chinese <\\/br>Age: 38 <\\/br>Years in formal education: 19 <\\/br>Job: Clinic Manager<br />OccupGroup: PS\",\"VocabR: 36<br />CollocR: 34<br />L1: Russian <\\/br>Age: 39 <\\/br>Years in formal education: 21 <\\/br>Job: Academic Tutor<br />OccupGroup: PS\",\"VocabR: 37<br />CollocR: 20<br />L1: Mandarin Chinese <\\/br>Age: 39 <\\/br>Years in formal education: 17.5 <\\/br>Job: Interpreter<br />OccupGroup: PS\",\"VocabR: 29<br />CollocR: 13<br />L1: Cantonese <\\/br>Age: 34 <\\/br>Years in formal education: 15 <\\/br>Job: Company Director<br />OccupGroup: PS\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(253,231,37,1)\",\"opacity\":1,\"size\":7.559055118110237,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(253,231,37,1)\"}},\"hoveron\":\"points\",\"name\":\"PS\",\"legendgroup\":\"PS\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":23.305936073059364,\"r\":7.3059360730593621,\"b\":37.260273972602747,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[6.6500000000000004,58.350000000000001],\"tickmode\":\"array\",\"ticktext\":[\"10\",\"20\",\"30\",\"40\",\"50\"],\"tickvals\":[10,20,30,40,50],\"categoryorder\":\"array\",\"categoryarray\":[\"10\",\"20\",\"30\",\"40\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716894984},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Vocabulary test scores\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1.3499999999999999,37.649999999999999],\"tickmode\":\"array\",\"ticktext\":[\"10\",\"20\",\"30\"],\"tickvals\":[10,20,30],\"categoryorder\":\"array\",\"categoryarray\":[\"10\",\"20\",\"30\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Grammar test scores\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"rgba(255,255,255,1)\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"layer\":\"below\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716894984},\"title\":{\"text\":\"Occupational<br />groups\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"11bfc50e4a814\":{\"x\":{},\"y\":{},\"text\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"11bfc50e4a814\",\"visdat\":{\"11bfc50e4a814\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\nAn interactive plot of L2 participants' lexical proficiency in English\n:::\n:::\n\n\n## References {#sec-References}\n\nAn important aspect of academic writing is the inclusion of in-text bibliographic references (**citations**) and a well-formatted list of references (the **bibliography**). *RStudio*'s Visual editor makes inserting bibliographic references extremely simple. To insert a reference, simply click on \"Insert\" and then select \"Citation\" or use the keyboard shortcut ‚åò/Ctrl ‚áß F8. This opens up a menu (see @fig-QuartoCitation) giving you the option to search for the source that you'd like to cite on your own computer (e.g., in your own Zotero database, if you use Zotero) or on the web via the [Crossref](https://www.crossref.org/) database or directly using a [DOI](https://forrt.org/glossary/english/doi/).\n\n![Search menu for bibliographic reference](images/Quarto_citation.png){#fig-QuartoCitation}\n\nAlternatively, if you start typing `@` in the Visual editor, a quick reference menu will appear. Either way, any references that you add will be displayed as `@` followed by a **reference identifier**. For example, in the source code of this Quarto document, every reference to @DabrowskaExperienceAptitudeIndividual2019 is indicated as `@DabrowskaExperienceAptitudeIndividual2019`.\n\n::: callout-tip\nFor more information on how to format your in-text citations, see the [Quarto guide](https://quarto.org/docs/authoring/footnotes-and-citations.html#sec-citations).\n:::\n\nWhen you insert your first reference in a Quarto document, *RStudio* will automatically create a `references.bib` file in your project folder. All references are automatically added to this new [BibLaTeX](https://en.wikipedia.org/wiki/BibLaTeX) file. As shown below, `.bib` files contain entries that begin with `@` followed by the type of reference (`article`, `book`, `manual`, `url`, etc.) and the reference identifier (e.g., `DabrowskaExperienceAptitudeIndividual2019`, `wickhamDataScienceImport2023`). The rest of the entries contains structured information about each reference including its title, date of publication, and DOI or ISBN.\n\n``` {.bib filename=\"references.bib\"}\n@article{\n  DabrowskaExperienceAptitudeIndividual2019,\n  title={Experience, Aptitude, and Individual Differences in Linguistic Attainment: A Comparison of Native and Nonnative Speakers},\n  volume={69},\n  ISSN={1467-9922},\n  url={https://onlinelibrary.wiley.com/doi/abs/10.1111/lang.12323},\n  DOI={10.1111/lang.12323},\n  number={S1},\n  journal={Language Learning},\n  author={DƒÖbrowska, Ewa},\n  year={2019},\n  pages={72‚Äì100}\n}\n\n@book{\n  wickhamDataScienceImport2023,\n  place={Beijing, Boston, Farnham, Sebastopol, Tokyo},\n  edition={2},\n  title={R for Data Science: Import, tidy, transform, visualize, and model data},\n  ISBN={978-1-4920-9740-2},\n  url={https://r4ds.hadley.nz/},\n  publisher={O‚ÄôReilly},\n  author={Wickham, Hadley and √áetinkaya-Rundel, Mine and Grolemund, Garrett},\n  year={2023} \n}\n```\n\nIn order to connect this `bibliography.bib` file with our Quarto document, we need to add a `bibliography` key to our **YAML header**. If our `references.bib` file is located in the same folder as our Quarto document (which is what *RStudio* does by default), we can simply add the following line to our document header:\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n--- \ntitle: \"Learning Quarto\"\nsubtitle: \"by reproducing the descriptive statistics of DƒÖbrowska's (2019) study\"\nauthor: \"Elen Le Foll\"\ndate: last-modified\nbibliography: references.bib\n---\n```\n:::\n\n\nWith this modified YAML header, when the document is rendered, a bibliography will automatically be added to the end of the document. This means that, if you have citations in your document, it is a good idea to include a header section `# References` at the end of the document.\n\n> ### References {.unnumbered}\n>\n> DƒÖbrowska, Ewa. 2019. \"Experience, Aptitude, and Individual Differences in Linguistic Attainment: A Comparison of Native and Nonnative Speakers.\" *Language Learning* 69 (S1): 72-100. <https://doi.org/10.1111/lang.12323>.\n>\n> Wickham, Hadley, Mine √áetinkaya-Rundel, and Garrett Grolemund. 2023. *R for Data Science: Import, Tidy, Transform, Visualize, and Model Data*. 2nd ed. O'Reilly. <https://r4ds.hadley.nz/>.\n\nBy default, Quarto will use the [Chicago Manual of Style](https://chicagomanualofstyle.org/) author-date citation format (as above). However, you can point to a different **citation stylesheet** in the form of a `.csl` (Citation Style Language) file in the YAML header. This allows us to determine exactly how our bibliography and in-text citations should be formatted. Many institutions, publishers, and journals have their own (sometimes annoyingly specific!) requirements. Luckily, the research community has put together a large repository of citation stylesheets for you to choose from: <https://www.zotero.org/styles>. You can download any of these stylesheets (as a `.csl` file), place the file in your project folder, and then link it to your Quarto document by adding a `cls` key to your header.\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: \"Learning Quarto\"\nsubtitle: \"by reproducing the descriptive statistics of DƒÖbrowska's (2019) study\"\nauthor: \"Elen Le Foll\"\ndate: last-modified\nbibliography: references.bib\ncsl: international-journal-of-learner-corpus-research.csl\n---\n```\n:::\n\n\nFor example, if you wanted to submit your paper to the [International Journal of Learner Corpus Research](https://benjamins.com/catalog/ijlcr), you could find the [corresponding CLS stylesheet](https://www.zotero.org/styles/international-journal-of-learner-corpus-research) in the [Zotero styles database](https://www.zotero.org/styles), save it in your project folder, and link to it in your YAML header as above. When rendered, your document's bibliography would then read:\n\n> ### References {.unnumbered}\n>\n> DƒÖbrowska, E. (2019). Experience, Aptitude, and Individual Differences in Linguistic Attainment: A Comparison of Native and Nonnative Speakers. *Language Learning*, *69*(S1), 72-100. <https://doi.org/10.1111/lang.12323>.\n>\n> Wickham, H., √áetinkaya-Rundel, M., & Grolemund, G. (2023). *R for data science: Import, tidy, transform, visualize, and model data* (2nd ed.). O'Reilly. Retrieved from <https://r4ds.hadley.nz/>.\n\n::: {.callout-tip collapse=\"false\"}\n#### Your turn! {.unnumbered}\n\n[**Q14.13**]{style=\"color:green;\"} Using any of the methods described above, add an in-text bibliographic reference to the following article in your Quarto document:\n\n> In'nami, Yo, Atsushi Mizumoto, Luke Plonsky & Rie Koizumi. 2022. Promoting computationally reproducible research in applied linguistics: Recommended practices and considerations. Research Methods in Applied Linguistics 1(3). 100030. https://doi.org/10.1016/j.rmal.2022.100030.\n\nSpecifically, we want to cite this passage from page 8:\n\n> As implementing these steps may seem daunting, we recommend that researchers engage in reproducible research incrementally. That may be one small step for a researcher, but it will represent a giant leap for the field of applied linguistics when consolidated and accumulated in the long run.\n\n[**Q14.14**]{style=\"color:green;\"} Which in-text citation cites this specific page?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_65461\" onsubmit=\"return validate_form_65461()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_65461\" id=\"answer_65461_1\" value=\"[@innami2022], p. 8]\"/>\n[@innami2022], p. 8]\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_65461\" id=\"answer_65461_2\" value=\"@innami2022: 8\"/>\n@innami2022: 8\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_65461\" id=\"answer_65461_3\" value=\"(@innami2022, p. 8)\"/>\n(@innami2022, p. 8)\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_65461\" id=\"answer_65461_4\" value=\"[@innami2022, p. 8]\"/>\n[@innami2022, p. 8]\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_65461\"></div>\n</form>\n<script>function validate_form_65461() {var x, text; var x = document.forms['form_65461']['answer_65461'].value;if (x == '[@innami2022, p. 8]'){text = 'That‚Äôs right!';} else {text = 'No, not quite.';} document.getElementById('result_65461').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5, res6, res7, res8, res9, res10, res11, res12;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ'; res6 = document.getElementById('result_11640').innerText == 'That‚Äôs right! üéâ'; res7 = document.getElementById('result_30975').innerText == 'That‚Äôs right! üéâ'; res8 = document.getElementById('result_89826').innerText == 'That‚Äôs right! What you are seeing are messages that the {here} and the {tidyverse} libraries output when they are correctly loaded. To find out more about conflicts, see Section 9.2.'; res9 = document.getElementById('result_83585').innerText == 'That‚Äôs right, well done!'; res10 = document.getElementById('result_78417').innerText == 'That‚Äôs right, well done!'; res11 = document.getElementById('result_40599').innerText == '‚úÖ'; res12 = document.getElementById('result_65461').innerText == 'That‚Äôs right!';text = res1 + res2 + res3 + res4 + res5 + res6 + res7 + res8 + res9 + res10 + res11 + res12;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"hint_90694\" onclick=\"return show_hint_90694()\">üê≠ Click on the mouse for a hint.</div>\n<div id=\"result_90694\" onclick=\"return show_hint_90694()\"></div>\n<script>function show_hint_90694(){var x = document.getElementById('result_90694').innerHTML; if(!x){document.getElementById('result_90694').innerHTML = 'You‚Äôll find detailed information on the formatting of in-text citations here: <a href=\"https://quarto.org/docs/authoring/citations.html\">https://quarto.org/docs/authoring/citations.html</a>.';} else {document.getElementById('result_90694').innerHTML = '';}}</script>\n```\n\n:::\n:::\n\n\nGo to the [Zotero style repository](https://www.zotero.org/styles) and download the `.csl` citation stylesheet to format references according to the American Psychological Association (APA) 7^th^ edition. Link this stylesheet to your Quarto document and render to HTML.\n\n[**Q14.15**]{style=\"color:green;\"} Now that your document includes references formatted in APA7, how are the authors' names listed in your bibliography?\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<form name=\"form_96755\" onsubmit=\"return validate_form_96755()\" method=\"post\">\n<label>\n<input type=\"radio\" name=\"answer_96755\" id=\"answer_96755_1\" value=\"In‚Äônami, Y., Mizumoto, A., Plonsky, L., and Koizumi, R.\"/>\nIn‚Äônami, Y., Mizumoto, A., Plonsky, L., and Koizumi, R.\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_96755\" id=\"answer_96755_2\" value=\"In‚Äônami et al.\"/>\nIn‚Äônami et al.\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_96755\" id=\"answer_96755_3\" value=\"In‚Äônami, Yo, Atsushi Mizumoto, Luke Plonsky and Rie Koizumi\"/>\nIn‚Äônami, Yo, Atsushi Mizumoto, Luke Plonsky and Rie Koizumi\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_96755\" id=\"answer_96755_4\" value=\"In‚Äônami, Y., Mizumoto, A., Plonsky, L., &amp; Koizumi, R.\"/>\nIn‚Äônami, Y., Mizumoto, A., Plonsky, L., &amp; Koizumi, R.\n</label>\n<br/>\n<label>\n<input type=\"radio\" name=\"answer_96755\" id=\"answer_96755_5\" value=\"In‚Äônami, Yo, Atsushi Mizumoto, Luke Plonsky &amp; Rie Koizumi\"/>\nIn‚Äônami, Yo, Atsushi Mizumoto, Luke Plonsky &amp; Rie Koizumi\n</label>\n<br/>\n<input type=\"submit\" value=\"Check answer\"/>\n<div id=\"result_96755\"></div>\n</form>\n<script>function validate_form_96755() {var x, text; var x = document.forms['form_96755']['answer_96755'].value;if (x == 'In‚Äônami, Y., Mizumoto, A., Plonsky, L., & Koizumi, R.'){text = 'Yes, well done! üëç';} else {text = 'No, not quite. Citation styles can look very similar, but the devil is in the detail! üòà';} document.getElementById('result_96755').innerHTML = text; evaluate_final_score(); return false;}function evaluate_final_score(){\n         element = document.getElementById('checkdown_final_score');\n         if(element === null){return false;} else {var element, text, res1, res2, res3, res4, res5, res6, res7, res8, res9, res10, res11, res12, res13;res1 = document.getElementById('result_8264').innerText == 'That‚Äôs right! The other options are short definitions of the terms ‚Äòabstract bias‚Äô, ‚Äòresearch integrity‚Äô, ‚Äòred teams‚Äô, ‚Äòvalidity‚Äô, and ‚Äòpublish or perish‚Äô, taken from the FORRT glossary. Can you tell which is which? Check your intuition here: https://forrt.org/glossary/english/.'; res2 = document.getElementById('result_87649').innerText == 'That‚Äôs right and there are many more potential sources of uncertainty throughout the research cycle.'; res3 = document.getElementById('result_37892').innerText == 'That‚Äôs right and that‚Äôs when authoring formats such as R Markdown and Quarto come in very handy as they allow us to combine all of these things!'; res4 = document.getElementById('result_51080').innerText == 'That‚Äôs right! üéâ'; res5 = document.getElementById('result_36044').innerText == 'That‚Äôs right! üéâ'; res6 = document.getElementById('result_11640').innerText == 'That‚Äôs right! üéâ'; res7 = document.getElementById('result_30975').innerText == 'That‚Äôs right! üéâ'; res8 = document.getElementById('result_89826').innerText == 'That‚Äôs right! What you are seeing are messages that the {here} and the {tidyverse} libraries output when they are correctly loaded. To find out more about conflicts, see Section 9.2.'; res9 = document.getElementById('result_83585').innerText == 'That‚Äôs right, well done!'; res10 = document.getElementById('result_78417').innerText == 'That‚Äôs right, well done!'; res11 = document.getElementById('result_40599').innerText == '‚úÖ'; res12 = document.getElementById('result_65461').innerText == 'That‚Äôs right!'; res13 = document.getElementById('result_96755').innerText == 'Yes, well done! üëç';text = res1 + res2 + res3 + res4 + res5 + res6 + res7 + res8 + res9 + res10 + res11 + res12 + res13;element.innerHTML = text;\n         return false;\n         }}</script>\n```\n\n:::\n:::\n\n:::\n\n:::: callout-tip\n#### Literature management {.unnumbered}\n\nOne of the major challenges of doing research is actually managing the large number of references that you need to consult, read, and cite in your projects. The good news is that **reference management software** are there to help you overcome this challenge. Whether you are working on a term paper, your Master's dissertation, your PhD thesis, or a post-doctoral project, it is *always* worth investing the time to learn to use a reference manager!\n\n[Zotero](https://www.zotero.org/) is a free and open-source bibliographic reference manager that will help you organise all your sources and generate beautifully formatted bibliographies for all your projects. It offers a [browser extension](https://www.zotero.org/download/) that enables you to quickly add references to your library directly from your web browser.\n\n::: column-margin\n![](images/Zotero_logo.png){width=\"100\" fig-alt=\"A red Z on a folder with bookmarks.\"}\n:::\n\nWhat's more, Zotero can be integrated in RStudio, making it very easy to include BibTeX-formatted references in your Quarto documents. Find out more in the [*RStudio* documentation](https://rstudio.github.io/visual-markdown-editing/citations.html).\n::::\n\n## Computing environment {#sec-Packages}\n\nIn addition to referencing academic papers, it is also very important that we reference which **`R` version** we used for our analyses and which **packages** and package versions. This serves two purposes:\n\n1.  Independent researchers (and our future selves!) know exactly what they need to be able to **reproduce** our analyses (see @sec-Reproducibility).\n2.  We give **credit** to the kind people who spent time and effort developing and sharing the `R` packages that we used for our analyses (see @sec-OpenSource).\n\nThe easiest way to \"give credit where credit is due\" to `R` package developers is to use the [{grateful}](https://pakillo.github.io/grateful/) package. Its `cite_packages()` function will scan your project for all the `R` packages that are used and generate a BibTeX file called `grateful-refs.bib` that contains the package references.\n\nYou will first need to add a reference to the BibTeX file generated by {grateful} in your YAML header. This means that your Quarto document will now have two bibliography files, which is fine as long as you use the following YAML syntax to reference them both.\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nbibliography: \n  - references.bib\n  - grateful-refs.bib\n---\n```\n:::\n\n\nThen, load the library (which you will have to install first, of course) and call the `cite_packages(output = \"paragraph\")` function. This will generate a paragraph that mentions all the used packages (see below) and add their references to the bibliography (either at the bottom of your rendered Quarto document or, in the case of this textbook, in the corresponding chapter, see @sec-References).\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#install.packages(\"grateful\")\nlibrary(grateful)\n\ncite_packages(output = \"paragraph\", out.dir = \".\")\n```\n````\n\n::: {.cell-output-display}\nWe used R version 4.5.0 [@base] and the following R packages: car v. 3.1.3 [@car], checkdown v. 0.0.13 [@checkdown], colorBlindness v. 0.1.9 [@colorBlindness], datasauRus v. 0.1.9 [@datasauRus], effectsize v. 1.0.1 [@effectsize], emmeans v. 1.11.1 [@emmeans], ggmosaic v. 0.3.3 [@ggmosaic], ggpattern v. 1.1.4 [@ggpattern], ggrepel v. 0.9.6 [@ggrepel], ggwordcloud v. 0.6.2 [@ggwordcloud], gt v. 1.0.0 [@gt], here v. 1.0.1 [@here], janeaustenr v. 1.0.0 [@janeaustenr], kableExtra v. 1.4.0 [@kableExtra], knitcitations v. 1.0.12 [@knitcitations], knitr v. 1.50 [@knitr2014; @knitr2015; @knitr2025], paletteer v. 1.6.0 [@paletteer], patchwork v. 1.3.0 [@patchwork], performance v. 0.15.1 [@performance], plotly v. 4.11.0 [@plotly], qqplotr v. 0.0.7 [@qqplotr], RefManageR v. 1.4.0 [@RefManageR2014; @RefManageR2017], relaimpo v. 2.2.7 [@relaimpo], report v. 0.6.1 [@report], rmarkdown v. 2.30 [@rmarkdown2018; @rmarkdown2020; @rmarkdown2025], scales v. 1.4.0 [@scales], sjPlot v. 2.8.17 [@sjPlot], skimr v. 2.2.1 [@skimr], tidyverse v. 2.0.0 [@tidyverse], tools v. 4.5.0 [@tools], truncnorm v. 1.0.9 [@truncnorm], viridis v. 0.6.5 [@viridis], visreg v. 2.7.0 [@visreg], xfun v. 0.53 [@xfun].\n:::\n:::\n\n\nAlternatively, `cite_packages()` can generate a table with all the package names, versions, and references. @tbl-packages lists all of the packages used in the making of this textbook. To display functioning links and references, the table is rendered using the `kable()` function from the {knitr} package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"knitr\")\npkgs <- cite_packages(output = \"table\", out.dir = \".\")\nknitr::kable(pkgs)\n```\n:::\n\n\n\n::: {#tbl-packages .cell}\n::: {.cell-output-display}\n\n\n|Package        |Version |Citation                                       |\n|:--------------|:-------|:----------------------------------------------|\n|base           |4.5.0   |@base                                          |\n|car            |3.1.3   |@car                                           |\n|checkdown      |0.0.13  |@checkdown                                     |\n|colorBlindness |0.1.9   |@colorBlindness                                |\n|datasauRus     |0.1.9   |@datasauRus                                    |\n|effectsize     |1.0.1   |@effectsize                                    |\n|emmeans        |1.11.1  |@emmeans                                       |\n|ggmosaic       |0.3.3   |@ggmosaic                                      |\n|ggpattern      |1.1.4   |@ggpattern                                     |\n|ggrepel        |0.9.6   |@ggrepel                                       |\n|ggwordcloud    |0.6.2   |@ggwordcloud                                   |\n|gt             |1.0.0   |@gt                                            |\n|here           |1.0.1   |@here                                          |\n|janeaustenr    |1.0.0   |@janeaustenr                                   |\n|kableExtra     |1.4.0   |@kableExtra                                    |\n|knitcitations  |1.0.12  |@knitcitations                                 |\n|knitr          |1.50    |@knitr2014; @knitr2015; @knitr2025             |\n|paletteer      |1.6.0   |@paletteer                                     |\n|patchwork      |1.3.0   |@patchwork                                     |\n|performance    |0.15.1  |@performance                                   |\n|plotly         |4.11.0  |@plotly                                        |\n|qqplotr        |0.0.7   |@qqplotr                                       |\n|RefManageR     |1.4.0   |@RefManageR2014; @RefManageR2017               |\n|relaimpo       |2.2.7   |@relaimpo                                      |\n|report         |0.6.1   |@report                                        |\n|rmarkdown      |2.30    |@rmarkdown2018; @rmarkdown2020; @rmarkdown2025 |\n|scales         |1.4.0   |@scales                                        |\n|sjPlot         |2.8.17  |@sjPlot                                        |\n|skimr          |2.2.1   |@skimr                                         |\n|tidyverse      |2.0.0   |@tidyverse                                     |\n|tools          |4.5.0   |@tools                                         |\n|truncnorm      |1.0.9   |@truncnorm                                     |\n|viridis        |0.6.5   |@viridis                                       |\n|visreg         |2.7.0   |@visreg                                        |\n|xfun           |0.53    |@xfun                                          |\n\n\n:::\n:::\n\n\nTracking the versions of the packages that your code relies on is important if you want your analysis code to be **reproducible** in the long-run (i.e. so that you or a colleague run it next month or next year). However, having to manually install these packages with these exact versions is hardly feasible. To simplify the process of re-creating your **project environment**, I recommend using [{renv}](https://rstudio.github.io/renv/index.html).\n\n::: column-margin\n![](images/hex_renv.svg){width=\"100\" fig-alt=\"The hex logo of the renv package features a plant growing in soil.\"}\n:::\n\nThe {renv} library keeps track of the exact package versions that your project depends on, and ensures that those exact versions are installed whenever and wherever your project is opened. {renv} provides each project with its own isolated package library, ensuring that you can update packages in new projects without risking breaking older projects. To create project-specific environments that additionally include system dependencies, I recommend [{rix}](https://docs.ropensci.org/rix/). The aim of these packages is to make your `R` projects more isolated, portable and therefore reproducible.\n\n::: column-margin\n![](images/hex_rix.png){width=\"100\" fig-alt=\"The hex logo of the rix package features a horned animal that looks like a prehistoric drawing.\"}\n:::\n\n::: callout-note\n#### Going further üìö\n\nFor an accessible introduction to stabilising your computing environment, I recommend reading: <https://berd-nfdi.github.io/BERD-reproducible-research-course/3-3-stabilize.html> and <https://the-turing-way.netlify.app/reproducible-research/renv.html>.\n:::\n\n## Sharing HTML documents {#sec-EmbedResources}\n\nYou may have noticed that, in addition to creating an `.html` file, rendering your Quarto document has also generated a folder containing any necessary data, images, stylesheets or other files required to display the HTML version of your document. This is because Quarto keeps external resources separate from the main HTML file by default. While this is advantageous for large documents and complex projects, it does mean that your HTML document can only be viewed if both the `.html` file and its associated folder are shared.\n\nIf you want to share a **single, self-contained** `.html` file with someone else or upload it somewhere, you will need to **embed** all the necessary files directly inside your HTML file. This is achieved by adding the following option at the end of your document's YAML header:\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nformat:\n  html:\n    embed-resources: true\n---\n```\n:::\n\n\nWith this setting, Quarto will package all the necessary resources inside the HTML file, resulting in a self-contained document that is easy to share and archive as it can be viewed in any web browser (e.g., Firefox, Google Chrome, Safari).\n\nIf you intend to share a longer Quarto document, it may be a good idea to number the headings and sub-headings (`number-sections`) and to include a table of content (`toc`). You can do this by adding the following two lines to the `format` section of your YAML header:\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nformat:\n  html:\n    embed-resources: true\n    number-sections: true\n    toc: true\n---\n```\n:::\n\n\n## Other publishing formats {#sec-PublishingFormats}\n\nSo far, we have only tried rendering our Quarto document to **HTML**, which is the default publishing format for Quarto documents. HTML has many advantages and is great for publishing online, but the beauty of Quarto is that you can share and publish your research in many other formats, too.\n\n![Artwork CC-BY 4.0 Allison Horst from the [\"Hello, Quarto\" keynote](https://mine.quarto.pub/hello-quarto/) by Julia Lowndes and Mine √áetinkaya-Rundel, presented at RStudio Conference 2022.](images/AHorst_many-qmd-to-output.png){#fig-Penguin fig-alt=\"A schematic showing many qmd files, going through Quarto, to generate an HTML, PDF, or Word document or more. The Quarto logo is depicted as a baseball a penguin is spinning.\" width=\"467\"}\n\n### Word, LibreOffice & co.\n\nYour supervisor or colleague may request a **Microsoft Word** version of your Quarto document and, thankfully, this is no problem. You can change the rendering format to a `.docx` file by ammending the format option in your **YAML header**:\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nformat: docx\n---\n```\n:::\n\n\nWith this format option, rendering your Quarto document will generate a `.docx` file that includes your text, any code that you wanted to show in your document, and all of the code outputs that you wanted to share, such as your statistics, graphs, and tables.\n\nSome of the formatting options available for HTML also work in the `.docx` format:\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nformat:\n  docx:\n    embed-resources: true\n    number-sections: true\n    toc: true\n---\n```\n:::\n\n\nNote that any options that are not available in the rendering format specified are ignored without warning or error messages.\n\n::: callout-warning\n#### Not rendering code chunks in specific formats\n\nDynamic code outputs, such as the **interactive** {plotly} graph displayed in @fig-scatterplot-plotly, cannot be meaningfully rendered to **static formats**, such as Microsoft Word or PDF. Attempting to do so can cause rendering errors such as:\n\n```         \nError: Functions that produce HTML output found in document targeting docx output.\nPlease change the output type of this document to HTML.\n```\n\nTo fix this, add the following options to any code chunk that generates content that only works in HTML:\n\n```{{r}}\n#| eval: !expr 'knitr::is_html_output()'\n#| echo: FALSE\n\nggplotly(L2.scatter2)\n```\n\nThese options ensure that the code chunk is ignored when the document is rendered to any format other than HTML.\n:::\n\nWhen you open the `.docx` version of your Quarto document in Microsoft Word, you may get a number of warnings (e.g., @fig-MSWordWarnings). You can safely click \"Yes\" or \"Close\" to get rid of these warnings and open up your Word file. If you cannot open the file in Microsoft Word, I recommend rendering to `.odt` instead (see below).\n\n::: {#fig-MSWordWarnings layout-ncol=\"2\"}\n![](images/Word_popup.png){#fig-WordRecovery fig-alt=\"Dialog menu from Microsoft Word that reads: Word found unreadable content in LearningQuarto3.docx. Do you want to recover the contents of this document? If you trust the source of this document, click Yes. Below the message there are two buttons: Yes and No.\" width=\"237\"}\n\n![](images/Word_repairs.png){#fig-WordRepairs fig-alt=\"Dialog menu from Microsoft Word entitled: Repairs. It reads: Word detected and repaired the following errors. To view each repair, select it in the list, then click Go To. Save the document to make the repairs permanent. Table Properties 1 Table Properties 2 Table Properties 3 etc. There is one button: Close\" width=\"237\"}\n\nExamples of popup menus that may appear when opening the `.docx` version of a Quarto document.\n:::\n\nTo share your work with **LibreOffice**, **OnlyOffice**, and **OpenOffice** users, use the `.odt` rendering option. This will generate an **OpenDocument** - an open standard file format that can be opened in any text-processing software, including Microsoft Word.\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nformat: odt\n---\n```\n:::\n\n\nBy default, the quality of the images and graphs in rendered `.docx` and `.odt` files is low to keep the file size reasonable. You can improve the quality of the rendered images by specifying the **image definition** in the YAML option. To do so, replace the format line that you added above with the following lines. Make sure that you indent each line correctly as shown below; otherwise, you will get an error when you try to render your document.\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nformat: \n  odt:\n    fig-dpi: 300\n---\n```\n:::\n\n\n::: {.callout-tip collapse=\"false\"}\n#### Your turn! {.unnumbered}\n\n[**Q14.16**]{style=\"color:green;\"} If you completed [**Q8.15**]{style=\"color:green;\"} (@sec-Range), you copied-and-pasted a paragraph with gaps into LibreOffice Writer or Microsoft Word and then manually inserted descriptive statistics that you had calculated in `R`. This method of copying-and-pasting across different programmes is very error-prone! What if you accidentally paste the wrong number in the wrong place? And what if there is an update to the dataset or you make some changes to the data cleaning procedure? You'd have to manually change all the numbers again! ü§Ø This is time-consuming and, more worryingly, very likely to result in errors!\n\nNow that you know about **literate programming** in Quarto, rewrite the following paragraph describing the `GrammarR` variable in `L1.data` and `L2.data` in Quarto. Use **in-text code chunks** to fill the gaps and then render your paragraph to `.docx` or `.odt` format to check the results.\n\n> On average, English native speakers performed only marginally better in the English grammatical comprehension test (median = \\_\\_\\_\\_\\_\\_) than English L2 learners (median = \\_\\_\\_\\_\\_\\_). However, L1 participants' grammatical comprehension test results ranged from \\_\\_\\_\\_\\_\\_to \\_\\_\\_\\_\\_\\_, whereas L2 participants' results ranged from \\_\\_\\_\\_\\_\\_to \\_\\_\\_\\_\\_\\_.\n\n¬†\n:::\n\n:::: {.callout-note collapse=\"true\"}\n#### Click here for the solution to [**Q14.16**]{style=\"color:green;\"}\n\nBelow is a screenshot of a Quarto document with the inline code chunks and its rendered `.odt` version as opened in LibreOffice Writer. You can click on the images to zoom in.\n\n::: {layout-ncol=\"2\"}\n![Quarto source code](images/Quarto_TaskSolution.png){#fig-SourceCode fig-alt=\"The paragraph with inline code in Quarto reads: On average, English native speakers performed only marginally better in the English grammatical comprehension test (median = 76) than English L2 learners (median = 75). L1 participants' grammatical comprehension test results ranged from 58 to 80. In this same test, L2 participants' results ranged 40 to 80.\"}\n\n![Rendered document as opened in LibreOffice Writer](images/LibreOffice_TaskSolution.png){#fig-LibreOfficeScreenshot}\n:::\n::::\n\n### PDF\n\nIt is also possible to render Quarto documents to **PDF**; however, this requires you to have [LaTeX](https://en.wikipedia.org/wiki/LaTeX) installed on your computer. If you don't already have your favourite LaTex distribution, Quarto developers recommend that you use the [TinyTeX](https://yihui.org/tinytex/) distribution to render to PDF. To **install** (or update) TinyTeX, go to the Terminal pane in RStudio and run the following command:\n\n``` {.txt filename=\"Terminal\"}\nquarto install tinytex\n```\n\nThis is likely to take a few minutes but you will only need to do it once. Afterwards, you can add the following line to your Quarto YAML header and you're ready to render to PDF!\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nformat: pdf\n---\n```\n:::\n\n\nHTML being the default format, some options available for HTML are not -- at least by default -- available in other publishing formats. Many of the basic options, however, work across different formats.\n\nThe YAML header options below can be used to include a table of content with numbered sections at the start of the PDF version of your document. It also includes two options that are specific to the PDF format: the first will print a list of figures (`lof`) and the second a list of tables (`lot`).\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\nformat:  \n  pdf:\n    number-sections: true\n    toc: true\n    lof: true\n    lot: true\n---    \n```\n:::\n\n\n### Slides\n\nIn research, it's quite common that you will be working on a project that will be submitted as a paper or thesis (e.g., in PDF format) *and* that you'll also want to **present** in class, to your research group, or at a conference. You can easily turn your Quarto document into **presentation slides**, too! There are currently three presentation formats to choose from:\n\n|  |  |  |\n|------------------------|------------------------|------------------------|\n| [Revealjs](https://quarto.org/docs/presentations/revealjs/) | Revealjs is an open-source HTML presentation framework. | `format: revealjs` |\n| [Power-Point](https://quarto.org/docs/presentations/powerpoint.html) | PowerPoint is Microsoft Office's presentation editing software. | `format: pptx` |\n| [Beamer](https://quarto.org/docs/presentations/beamer.html) | Beamer is a LaTeX class for producing presentations and slides in PDF format. | `format: beamer` |\n\nI recommend using **Revealjs** and the best way to get a sense of what is possible is to explore this [demo](https://quarto.org/docs/presentations/revealjs/demo/){target=\"_blank\"} presentation from the [Quarto Guide](https://quarto.org/docs/presentations/revealjs/):\n\n<div>\n\n```{=html}\n<iframe width=\"600\" height=\"400\" class=\"slide-deck\" src=\"https://quarto.org/docs/presentations/revealjs/demo/\"></iframe>\n```\n\n</div>\n\nIf you prefer to view the demo in large in a standalone browser tab, head to the [Quarto Guide](https://quarto.org/docs/presentations/revealjs/demo/){target=\"_blank\"}. Check out the [source code](https://github.com/quarto-dev/quarto-web/blob/main/docs/presentations/revealjs/demo/index.qmd) to see how the slides were created.\n\n## Conclusion\n\nIn this chapter, we've only just scratched the surface of what's possible in Quarto. The Quarto documentation is very detailed and well worth exploring to find out what else you can do in Quarto: <https://quarto.org/docs/guide/>. From books to blogs and interactive dashboards, the world's your oyster! üöÄ\n\n::: callout-note\n#### Going further with Quarto\n\n‚û°Ô∏è For those of you who want to dive a little deeper, I heartily recommend the final chapter of \"An Introduction to Quantitative Text Analysis for Linguistics: Reproducible Research Using R\" by Jerid Francom: <https://qtalr.com/book/part_5/11_contribute.html>.\n\n‚û°Ô∏è Quarto has many functionalities that are particularly attractive to those of us involved in higher education teaching and academic research. Watch [Quarto for Academics](https://www.youtube.com/embed/EbAAmrB0luA?si=AwJ3szmUKECHfwuS) (20 minutes) by Mine √áetinkaya-Rundel to find out more.\n\n‚û°Ô∏è Thinking of writing an entire M.A./PhD thesis or book in Quarto? Cameron Patrick wrote his PhD thesis in Quarto and has helpfully put together some great tips so that his \"pain and suffering can help reduce yours\". Well worth reading if you're thinking of rendering a complex (set of) Quarto document(s) to PDF: <https://cameronpatrick.com/post/2023/07/quarto-thesis-formatting/>.\n\n‚û°Ô∏è Last but not least, the latest edition of \"R for Data Science\" also has a great chapter on communicating the results of data science projects using Quarto: <https://r4ds.hadley.nz/communicate>.\n:::\n\n### Check your progress üåü {.unnumbered}\n\nWell done! You have successfully completed this chapter on literate programming using Quarto. You have answered [`<span id=\"checkdown_final_score\">0</span>`{=html} out of 16 questions]{style=\"color:green;\"} correctly.\n\nAre you confident that you can...?\n\n-   [ ] Explain the concepts of literate programming and reproducible research to a friend or colleague (@sec-LitProgramming)\n-   [ ] Write and format text (bold, first-level heading, italics, etc.) in a Quarto document (@sec-Markdown)\n-   [ ] Insert a code chunk in a Quarto document and use inline codes (@sec-Chunks)\n-   [ ] Insert code chunks in a Quarto document and make use of inline code (@sec-Inline)\n-   [ ] Insert tables in a Quarto document (@sec-QuartoTables)\n-   [ ] Embed images and plots in a Quarto document (@sec-QuartoFigures)\n-   [ ] Render (i.e. export) your `.qmd` document to HTML, Microsoft Word, and PDF (@sec-PublishingFormats)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.11.0/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.2/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.2/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}